{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/matty/untitled folder/CMAMeet/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14,_templateObject15,_templateObject16,_templateObject17;import React,{useState,useEffect,useRef,useCallback}from'react';import{useParams,useSearchParams,useNavigate}from'react-router-dom';import io from'socket.io-client';import styled from'styled-components';import{Mic,MicOff,Video,VideoOff,Monitor,MessageSquare,Phone,Users,Send}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  min-height: 100vh;\\n  background: #1a1a1a;\\n  display: flex;\\n  flex-direction: column;\\n\"])));const Header=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  background: #2d2d2d;\\n  padding: 15px 20px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  color: white;\\n\"])));const RoomInfo=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n\"])));const RoomId=styled.span(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  font-weight: 600;\\n  font-size: 1.1rem;\\n\"])));const MainContent=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  display: flex;\\n  position: relative;\\n\"])));const VideoGrid=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\\n  gap: 10px;\\n  padding: 20px;\\n  align-content: start;\\n\"])));const VideoContainer=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  position: relative;\\n  background: #333;\\n  border-radius: 10px;\\n  overflow: hidden;\\n  aspect-ratio: 16/9;\\n  min-height: 200px;\\n\"])));const StyledVideo=styled.video(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  object-fit: cover;\\n\"])));const VideoLabel=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  bottom: 10px;\\n  left: 10px;\\n  background: rgba(0, 0, 0, 0.7);\\n  color: white;\\n  padding: 5px 10px;\\n  border-radius: 5px;\\n  font-size: 0.9rem;\\n\"])));const ChatPanel=styled.div(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  width: 350px;\\n  background: #2d2d2d;\\n  display: flex;\\n  flex-direction: column;\\n  border-left: 1px solid #444;\\n\"])));const ChatHeader=styled.div(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  padding: 15px 20px;\\n  border-bottom: 1px solid #444;\\n  color: white;\\n  font-weight: 600;\\n\"])));const ChatMessages=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  padding: 15px;\\n  overflow-y: auto;\\n  display: flex;\\n  flex-direction: column;\\n  gap: 10px;\\n\"])));const Message=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  color: white;\\n  padding: 10px 15px;\\n  border-radius: 10px;\\n  max-width: 80%;\\n  align-self: \",\";\\n  word-wrap: break-word;\\n\"])),props=>props.isOwn?'#667eea':'#444',props=>props.isOwn?'flex-end':'flex-start');const MessageSender=styled.div(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  font-size: 0.8rem;\\n  opacity: 0.7;\\n  margin-bottom: 5px;\\n\"])));const ChatInput=styled.div(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  padding: 15px;\\n  border-top: 1px solid #444;\\n  display: flex;\\n  gap: 10px;\\n\"])));const MessageInput=styled.input(_templateObject14||(_templateObject14=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  padding: 10px 15px;\\n  border: 1px solid #555;\\n  border-radius: 20px;\\n  background: #333;\\n  color: white;\\n  font-size: 0.9rem;\\n\\n  &:focus {\\n    outline: none;\\n    border-color: #667eea;\\n  }\\n\\n  &::placeholder {\\n    color: #999;\\n  }\\n\"])));const SendButton=styled.button(_templateObject15||(_templateObject15=_taggedTemplateLiteral([\"\\n  background: #667eea;\\n  border: none;\\n  border-radius: 50%;\\n  width: 40px;\\n  height: 40px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  color: white;\\n  cursor: pointer;\\n  transition: background 0.3s ease;\\n\\n  &:hover {\\n    background: #5a6fd8;\\n  }\\n\"])));const Controls=styled.div(_templateObject16||(_templateObject16=_taggedTemplateLiteral([\"\\n  background: #2d2d2d;\\n  padding: 20px;\\n  display: flex;\\n  justify-content: center;\\n  gap: 15px;\\n  border-top: 1px solid #444;\\n\"])));const ControlButton=styled.button(_templateObject17||(_templateObject17=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  border: none;\\n  border-radius: 50%;\\n  width: 50px;\\n  height: 50px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  color: white;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n\\n  &:hover {\\n    background: \",\";\\n  }\\n\\n  &.leave {\\n    background: #dc3545;\\n    \\n    &:hover {\\n      background: #c82333;\\n    }\\n  }\\n\"])),props=>props.active?'#667eea':'#444',props=>props.active?'#5a6fd8':'#555');const VideoRoom=()=>{const{roomId}=useParams();const[searchParams]=useSearchParams();const navigate=useNavigate();const[socket,setSocket]=useState(null);const[localStream,setLocalStream]=useState(null);const[remoteStreams,setRemoteStreams]=useState(new Map());const[isAudioMuted,setIsAudioMuted]=useState(false);const[isVideoMuted,setIsVideoMuted]=useState(false);const[isScreenSharing,setIsScreenSharing]=useState(false);const[showChat,setShowChat]=useState(false);const[messages,setMessages]=useState([]);const[newMessage,setNewMessage]=useState('');const[participants,setParticipants]=useState(1);const[isInitiator,setIsInitiator]=useState(false);const localVideoRef=useRef(null);const remoteVideoRefs=useRef(new Map());const peerConnections=useRef(new Map());const userName=searchParams.get('name')||'Anonymous';// Initialize socket connection\nuseEffect(()=>{const socketUrl=process.env.NODE_ENV==='production'?'https://cmameet.onrender.com':'http://localhost:5001';console.log('Connecting to socket:',socketUrl);const newSocket=io(socketUrl);newSocket.on('connect',()=>{console.log('Socket connected with ID:',newSocket.id);});newSocket.on('disconnect',()=>{console.log('Socket disconnected');});newSocket.on('connect_error',error=>{console.error('Socket connection error:',error);});setSocket(newSocket);return()=>{newSocket.close();};},[]);// Create peer connection\nconst createPeerConnection=useCallback(userId=>{console.log('Creating peer connection for user:',userId);const peerConnection=new RTCPeerConnection({iceServers:[{urls:'stun:stun.l.google.com:19302'},{urls:'stun:stun1.l.google.com:19302'}]});// Add local stream tracks\nif(localStream){localStream.getTracks().forEach(track=>{peerConnection.addTrack(track,localStream);console.log('Added track to peer connection:',track.kind);});}else{console.log('No local stream available when creating peer connection');}// Handle remote stream\npeerConnection.ontrack=event=>{console.log('Received remote stream from:',userId);const[remoteStream]=event.streams;setRemoteStreams(prev=>new Map(prev).set(userId,remoteStream));};// Handle ICE candidates\npeerConnection.onicecandidate=event=>{if(event.candidate){console.log('Sending ICE candidate to:',userId);socket.emit('ice-candidate',{candidate:event.candidate,roomId,userId});}};// Handle connection state changes\npeerConnection.onconnectionstatechange=()=>{console.log(\"Connection state with \".concat(userId,\":\"),peerConnection.connectionState);};peerConnections.current.set(userId,peerConnection);},[localStream,socket,roomId]);// Handle offer received\nconst handleOfferReceived=useCallback(async data=>{const{offer,userId}=data;console.log('Processing offer from:',userId);let peerConnection=peerConnections.current.get(userId);if(!peerConnection){console.log('Creating new peer connection for offer from:',userId);createPeerConnection(userId);peerConnection=peerConnections.current.get(userId);}try{await peerConnection.setRemoteDescription(new RTCSessionDescription(offer));console.log('Set remote description for:',userId);const answer=await peerConnection.createAnswer();await peerConnection.setLocalDescription(answer);console.log('Created and set local answer for:',userId);socket.emit('answer',{answer,roomId,userId});console.log('Sent answer to:',userId);}catch(error){console.error('Error handling offer:',error);}},[createPeerConnection,socket,roomId]);// Handle answer received\nconst handleAnswerReceived=useCallback(async data=>{const{answer,userId}=data;console.log('Processing answer from:',userId);const peerConnection=peerConnections.current.get(userId);if(peerConnection){try{await peerConnection.setRemoteDescription(new RTCSessionDescription(answer));console.log('Set remote answer for:',userId);}catch(error){console.error('Error handling answer:',error);}}else{console.error('No peer connection found for answer from:',userId);}},[]);// Handle ICE candidate received\nconst handleIceCandidateReceived=useCallback(async data=>{const{candidate,userId}=data;const peerConnection=peerConnections.current.get(userId);if(peerConnection){try{await peerConnection.addIceCandidate(new RTCIceCandidate(candidate));}catch(error){console.error('Error handling ICE candidate:',error);}}},[]);// Send offer to new user\nconst sendOffer=useCallback(async userId=>{const peerConnection=peerConnections.current.get(userId);if(!peerConnection){console.log('No peer connection found for user:',userId);return;}try{const offer=await peerConnection.createOffer();await peerConnection.setLocalDescription(offer);socket.emit('offer',{offer,roomId,userId});console.log('Offer sent to user:',userId);}catch(error){console.error('Error sending offer:',error);}},[socket,roomId]);// Initialize local media stream\nuseEffect(()=>{const initLocalStream=async()=>{try{const stream=await navigator.mediaDevices.getUserMedia({video:true,audio:true});setLocalStream(stream);if(localVideoRef.current){localVideoRef.current.srcObject=stream;}}catch(error){console.error('Error accessing media devices:',error);alert('Unable to access camera and microphone. Please check permissions.');}};initLocalStream();},[]);// Socket event handlers\nuseEffect(()=>{if(!socket)return;const handleUserConnected=userId=>{console.log('User connected:',userId);// Only increment if it's not ourselves\nif(userId!==userName){setParticipants(prev=>prev+1);createPeerConnection(userId);// Only send offer if we are the initiator (first user or designated initiator)\nif(isInitiator){console.log('Sending offer as initiator to:',userId);setTimeout(()=>{sendOffer(userId);},1000);// Small delay to ensure peer connection is ready\n}else{console.log('Waiting for offer from initiator:',userId);}}else{console.log('Ignoring self-connection event for:',userId);}};const handleUserDisconnected=userId=>{console.log('User disconnected:',userId);setParticipants(prev=>prev-1);if(peerConnections.current.has(userId)){peerConnections.current.get(userId).close();peerConnections.current.delete(userId);}setRemoteStreams(prev=>{const newStreams=new Map(prev);newStreams.delete(userId);return newStreams;});};const handleOffer=async data=>{console.log('Received offer from:',data.userId);await handleOfferReceived(data);};const handleAnswer=async data=>{console.log('Received answer from:',data.userId);await handleAnswerReceived(data);};const handleIceCandidate=async data=>{console.log('Received ICE candidate from:',data.userId);await handleIceCandidateReceived(data);};const handleMessage=data=>{setMessages(prev=>[...prev,data]);};socket.on('user-connected',handleUserConnected);socket.on('user-disconnected',handleUserDisconnected);socket.on('offer',handleOffer);socket.on('answer',handleAnswer);socket.on('ice-candidate',handleIceCandidate);socket.on('receive-message',handleMessage);return()=>{socket.off('user-connected',handleUserConnected);socket.off('user-disconnected',handleUserDisconnected);socket.off('offer',handleOffer);socket.off('answer',handleAnswer);socket.off('ice-candidate',handleIceCandidate);socket.off('receive-message',handleMessage);};},[socket,sendOffer,createPeerConnection,handleOfferReceived,handleAnswerReceived,handleIceCandidateReceived,isInitiator,userName]);// Join room when socket is ready\nuseEffect(()=>{if(socket&&roomId){console.log('Joining room:',roomId,'with user:',userName);socket.emit('join-room',roomId,userName);}},[socket,roomId,userName]);// Listen for room-joined event to determine if we're the initiator\nuseEffect(()=>{if(!socket)return;const handleRoomJoined=data=>{console.log('Room joined response:',data);if(data.isInitiator){setIsInitiator(true);console.log('I am the initiator for this room');}else{setIsInitiator(false);console.log('I am not the initiator, waiting for offers');}// Set the correct participant count\nif(data.totalParticipants){setParticipants(data.totalParticipants);console.log(\"Total participants in room: \".concat(data.totalParticipants));}// Create peer connections for existing participants\nif(data.existingParticipants&&data.existingParticipants.length>0){console.log('Creating peer connections for existing participants:',data.existingParticipants);data.existingParticipants.forEach(userId=>{if(userId!==userName){// Don't create connection to self\ncreatePeerConnection(userId);// If we're the initiator, send offers to existing participants\nif(data.isInitiator){setTimeout(()=>{sendOffer(userId);},1000);}}});}};socket.on('room-joined',handleRoomJoined);return()=>{socket.off('room-joined',handleRoomJoined);};},[socket,createPeerConnection,sendOffer,userName]);// Toggle audio\nconst toggleAudio=()=>{if(localStream){const audioTrack=localStream.getAudioTracks()[0];if(audioTrack){audioTrack.enabled=!audioTrack.enabled;setIsAudioMuted(!audioTrack.enabled);}}};// Toggle video\nconst toggleVideo=()=>{if(localStream){const videoTrack=localStream.getVideoTracks()[0];if(videoTrack){videoTrack.enabled=!videoTrack.enabled;setIsVideoMuted(!videoTrack.enabled);}}};// Toggle screen sharing\nconst toggleScreenShare=async()=>{try{if(!isScreenSharing){const screenStream=await navigator.mediaDevices.getDisplayMedia({video:true,audio:true});// Replace video track in all peer connections\nconst videoTrack=screenStream.getVideoTracks()[0];peerConnections.current.forEach(peerConnection=>{const sender=peerConnection.getSenders().find(s=>s.track&&s.track.kind==='video');if(sender){sender.replaceTrack(videoTrack);}});// Update local video\nif(localVideoRef.current){localVideoRef.current.srcObject=screenStream;}setIsScreenSharing(true);// Handle screen share end\nvideoTrack.onended=()=>{toggleScreenShare();};}else{// Stop screen sharing and restore camera\nif(localStream){const videoTrack=localStream.getVideoTracks()[0];peerConnections.current.forEach(peerConnection=>{const sender=peerConnection.getSenders().find(s=>s.track&&s.track.kind==='video');if(sender){sender.replaceTrack(videoTrack);}});if(localVideoRef.current){localVideoRef.current.srcObject=localStream;}}setIsScreenSharing(false);}}catch(error){console.error('Error toggling screen share:',error);}};// Send message\nconst sendMessage=()=>{if(newMessage.trim()&&socket){const message={text:newMessage.trim(),sender:userName,timestamp:new Date().toISOString()};socket.emit('send-message',{message,roomId});setNewMessage('');}};// Leave room\nconst leaveRoom=()=>{if(socket){socket.emit('leave-room',roomId,userName);}// Close all peer connections\npeerConnections.current.forEach(peerConnection=>{peerConnection.close();});// Stop local stream\nif(localStream){localStream.getTracks().forEach(track=>track.stop());}navigate('/');};// Handle key press for message input\nconst handleKeyPress=e=>{if(e.key==='Enter'){sendMessage();}};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Header,{children:/*#__PURE__*/_jsxs(RoomInfo,{children:[/*#__PURE__*/_jsx(Users,{size:20}),/*#__PURE__*/_jsxs(RoomId,{children:[\"Room: \",roomId]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"(\",participants,\" participants)\"]})]})}),/*#__PURE__*/_jsxs(MainContent,{children:[/*#__PURE__*/_jsxs(VideoGrid,{children:[/*#__PURE__*/_jsxs(VideoContainer,{children:[/*#__PURE__*/_jsx(StyledVideo,{ref:localVideoRef,autoPlay:true,muted:true,playsInline:true}),/*#__PURE__*/_jsxs(VideoLabel,{children:[userName,\" (You)\"]})]}),Array.from(remoteStreams.entries()).map(_ref=>{let[userId,stream]=_ref;return/*#__PURE__*/_jsxs(VideoContainer,{children:[/*#__PURE__*/_jsx(StyledVideo,{ref:ref=>{if(ref){ref.srcObject=stream;remoteVideoRefs.current.set(userId,ref);}},autoPlay:true,playsInline:true}),/*#__PURE__*/_jsx(VideoLabel,{children:userId})]},userId);})]}),showChat&&/*#__PURE__*/_jsxs(ChatPanel,{children:[/*#__PURE__*/_jsx(ChatHeader,{children:\"Chat\"}),/*#__PURE__*/_jsx(ChatMessages,{children:messages.map((message,index)=>/*#__PURE__*/_jsxs(Message,{isOwn:message.sender===userName,children:[/*#__PURE__*/_jsx(MessageSender,{children:message.sender}),message.text]},index))}),/*#__PURE__*/_jsxs(ChatInput,{children:[/*#__PURE__*/_jsx(MessageInput,{type:\"text\",placeholder:\"Type a message...\",value:newMessage,onChange:e=>setNewMessage(e.target.value),onKeyPress:handleKeyPress}),/*#__PURE__*/_jsx(SendButton,{onClick:sendMessage,children:/*#__PURE__*/_jsx(Send,{size:16})})]})]})]}),/*#__PURE__*/_jsxs(Controls,{children:[/*#__PURE__*/_jsx(ControlButton,{onClick:toggleAudio,active:!isAudioMuted,title:isAudioMuted?'Unmute':'Mute',children:isAudioMuted?/*#__PURE__*/_jsx(MicOff,{size:20}):/*#__PURE__*/_jsx(Mic,{size:20})}),/*#__PURE__*/_jsx(ControlButton,{onClick:toggleVideo,active:!isVideoMuted,title:isVideoMuted?'Turn on camera':'Turn off camera',children:isVideoMuted?/*#__PURE__*/_jsx(VideoOff,{size:20}):/*#__PURE__*/_jsx(Video,{size:20})}),/*#__PURE__*/_jsx(ControlButton,{onClick:toggleScreenShare,active:isScreenSharing,title:isScreenSharing?'Stop sharing':'Share screen',children:/*#__PURE__*/_jsx(Monitor,{size:20})}),/*#__PURE__*/_jsx(ControlButton,{onClick:()=>setShowChat(!showChat),active:showChat,title:\"Toggle chat\",children:/*#__PURE__*/_jsx(MessageSquare,{size:20})}),/*#__PURE__*/_jsx(ControlButton,{onClick:leaveRoom,className:\"leave\",title:\"Leave room\",children:/*#__PURE__*/_jsx(Phone,{size:20})})]})]});};export default VideoRoom;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useParams","useSearchParams","useNavigate","io","styled","Mic","MicOff","Video","VideoOff","Monitor","MessageSquare","Phone","Users","Send","jsx","_jsx","jsxs","_jsxs","Container","div","_templateObject","_taggedTemplateLiteral","Header","_templateObject2","RoomInfo","_templateObject3","RoomId","span","_templateObject4","MainContent","_templateObject5","VideoGrid","_templateObject6","VideoContainer","_templateObject7","StyledVideo","video","_templateObject8","VideoLabel","_templateObject9","ChatPanel","_templateObject0","ChatHeader","_templateObject1","ChatMessages","_templateObject10","Message","_templateObject11","props","isOwn","MessageSender","_templateObject12","ChatInput","_templateObject13","MessageInput","input","_templateObject14","SendButton","button","_templateObject15","Controls","_templateObject16","ControlButton","_templateObject17","active","VideoRoom","roomId","searchParams","navigate","socket","setSocket","localStream","setLocalStream","remoteStreams","setRemoteStreams","Map","isAudioMuted","setIsAudioMuted","isVideoMuted","setIsVideoMuted","isScreenSharing","setIsScreenSharing","showChat","setShowChat","messages","setMessages","newMessage","setNewMessage","participants","setParticipants","isInitiator","setIsInitiator","localVideoRef","remoteVideoRefs","peerConnections","userName","get","socketUrl","process","env","NODE_ENV","console","log","newSocket","on","id","error","close","createPeerConnection","userId","peerConnection","RTCPeerConnection","iceServers","urls","getTracks","forEach","track","addTrack","kind","ontrack","event","remoteStream","streams","prev","set","onicecandidate","candidate","emit","onconnectionstatechange","concat","connectionState","current","handleOfferReceived","data","offer","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","handleAnswerReceived","handleIceCandidateReceived","addIceCandidate","RTCIceCandidate","sendOffer","createOffer","initLocalStream","stream","navigator","mediaDevices","getUserMedia","audio","srcObject","alert","handleUserConnected","setTimeout","handleUserDisconnected","has","delete","newStreams","handleOffer","handleAnswer","handleIceCandidate","handleMessage","off","handleRoomJoined","totalParticipants","existingParticipants","length","toggleAudio","audioTrack","getAudioTracks","enabled","toggleVideo","videoTrack","getVideoTracks","toggleScreenShare","screenStream","getDisplayMedia","sender","getSenders","find","s","replaceTrack","onended","sendMessage","trim","message","text","timestamp","Date","toISOString","leaveRoom","stop","handleKeyPress","e","key","children","size","ref","autoPlay","muted","playsInline","Array","from","entries","map","_ref","index","type","placeholder","value","onChange","target","onKeyPress","onClick","title","className"],"sources":["/Users/matty/untitled folder/CMAMeet/client/src/components/VideoRoom.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams, useSearchParams, useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport styled from 'styled-components';\nimport { \n  Mic, \n  MicOff, \n  Video, \n  VideoOff, \n  Monitor, \n  MessageSquare, \n  Phone, \n  Users,\n  Send\n} from 'lucide-react';\n\nconst Container = styled.div`\n  min-height: 100vh;\n  background: #1a1a1a;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Header = styled.div`\n  background: #2d2d2d;\n  padding: 15px 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: white;\n`;\n\nconst RoomInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst RoomId = styled.span`\n  font-weight: 600;\n  font-size: 1.1rem;\n`;\n\nconst MainContent = styled.div`\n  flex: 1;\n  display: flex;\n  position: relative;\n`;\n\nconst VideoGrid = styled.div`\n  flex: 1;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 10px;\n  padding: 20px;\n  align-content: start;\n`;\n\nconst VideoContainer = styled.div`\n  position: relative;\n  background: #333;\n  border-radius: 10px;\n  overflow: hidden;\n  aspect-ratio: 16/9;\n  min-height: 200px;\n`;\n\nconst StyledVideo = styled.video`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst VideoLabel = styled.div`\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n  background: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 0.9rem;\n`;\n\nconst ChatPanel = styled.div`\n  width: 350px;\n  background: #2d2d2d;\n  display: flex;\n  flex-direction: column;\n  border-left: 1px solid #444;\n`;\n\nconst ChatHeader = styled.div`\n  padding: 15px 20px;\n  border-bottom: 1px solid #444;\n  color: white;\n  font-weight: 600;\n`;\n\nconst ChatMessages = styled.div`\n  flex: 1;\n  padding: 15px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nconst Message = styled.div`\n  background: ${props => props.isOwn ? '#667eea' : '#444'};\n  color: white;\n  padding: 10px 15px;\n  border-radius: 10px;\n  max-width: 80%;\n  align-self: ${props => props.isOwn ? 'flex-end' : 'flex-start'};\n  word-wrap: break-word;\n`;\n\nconst MessageSender = styled.div`\n  font-size: 0.8rem;\n  opacity: 0.7;\n  margin-bottom: 5px;\n`;\n\nconst ChatInput = styled.div`\n  padding: 15px;\n  border-top: 1px solid #444;\n  display: flex;\n  gap: 10px;\n`;\n\nconst MessageInput = styled.input`\n  flex: 1;\n  padding: 10px 15px;\n  border: 1px solid #555;\n  border-radius: 20px;\n  background: #333;\n  color: white;\n  font-size: 0.9rem;\n\n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n\n  &::placeholder {\n    color: #999;\n  }\n`;\n\nconst SendButton = styled.button`\n  background: #667eea;\n  border: none;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  cursor: pointer;\n  transition: background 0.3s ease;\n\n  &:hover {\n    background: #5a6fd8;\n  }\n`;\n\nconst Controls = styled.div`\n  background: #2d2d2d;\n  padding: 20px;\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  border-top: 1px solid #444;\n`;\n\nconst ControlButton = styled.button`\n  background: ${props => props.active ? '#667eea' : '#444'};\n  border: none;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: ${props => props.active ? '#5a6fd8' : '#555'};\n  }\n\n  &.leave {\n    background: #dc3545;\n    \n    &:hover {\n      background: #c82333;\n    }\n  }\n`;\n\nconst VideoRoom = () => {\n  const { roomId } = useParams();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  \n  const [socket, setSocket] = useState(null);\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStreams, setRemoteStreams] = useState(new Map());\n  const [isAudioMuted, setIsAudioMuted] = useState(false);\n  const [isVideoMuted, setIsVideoMuted] = useState(false);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const [showChat, setShowChat] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [participants, setParticipants] = useState(1);\n  const [isInitiator, setIsInitiator] = useState(false);\n\n  const localVideoRef = useRef(null);\n  const remoteVideoRefs = useRef(new Map());\n  const peerConnections = useRef(new Map());\n  const userName = searchParams.get('name') || 'Anonymous';\n\n  // Initialize socket connection\n  useEffect(() => {\n    const socketUrl = process.env.NODE_ENV === 'production' \n      ? 'https://cmameet.onrender.com' \n      : 'http://localhost:5001';\n    console.log('Connecting to socket:', socketUrl);\n    const newSocket = io(socketUrl);\n    \n    newSocket.on('connect', () => {\n      console.log('Socket connected with ID:', newSocket.id);\n    });\n    \n    newSocket.on('disconnect', () => {\n      console.log('Socket disconnected');\n    });\n    \n    newSocket.on('connect_error', (error) => {\n      console.error('Socket connection error:', error);\n    });\n    \n    setSocket(newSocket);\n\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  // Create peer connection\n  const createPeerConnection = useCallback((userId) => {\n    console.log('Creating peer connection for user:', userId);\n    const peerConnection = new RTCPeerConnection({\n      iceServers: [\n        { urls: 'stun:stun.l.google.com:19302' },\n        { urls: 'stun:stun1.l.google.com:19302' }\n      ]\n    });\n\n    // Add local stream tracks\n    if (localStream) {\n      localStream.getTracks().forEach(track => {\n        peerConnection.addTrack(track, localStream);\n        console.log('Added track to peer connection:', track.kind);\n      });\n    } else {\n      console.log('No local stream available when creating peer connection');\n    }\n\n    // Handle remote stream\n    peerConnection.ontrack = (event) => {\n      console.log('Received remote stream from:', userId);\n      const [remoteStream] = event.streams;\n      setRemoteStreams(prev => new Map(prev).set(userId, remoteStream));\n    };\n\n    // Handle ICE candidates\n    peerConnection.onicecandidate = (event) => {\n      if (event.candidate) {\n        console.log('Sending ICE candidate to:', userId);\n        socket.emit('ice-candidate', {\n          candidate: event.candidate,\n          roomId,\n          userId\n        });\n      }\n    };\n\n    // Handle connection state changes\n    peerConnection.onconnectionstatechange = () => {\n      console.log(`Connection state with ${userId}:`, peerConnection.connectionState);\n    };\n\n    peerConnections.current.set(userId, peerConnection);\n  }, [localStream, socket, roomId]);\n\n  // Handle offer received\n  const handleOfferReceived = useCallback(async (data) => {\n    const { offer, userId } = data;\n    console.log('Processing offer from:', userId);\n    let peerConnection = peerConnections.current.get(userId);\n    \n    if (!peerConnection) {\n      console.log('Creating new peer connection for offer from:', userId);\n      createPeerConnection(userId);\n      peerConnection = peerConnections.current.get(userId);\n    }\n\n    try {\n      await peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\n      console.log('Set remote description for:', userId);\n      const answer = await peerConnection.createAnswer();\n      await peerConnection.setLocalDescription(answer);\n      console.log('Created and set local answer for:', userId);\n      \n      socket.emit('answer', {\n        answer,\n        roomId,\n        userId\n      });\n      console.log('Sent answer to:', userId);\n    } catch (error) {\n      console.error('Error handling offer:', error);\n    }\n  }, [createPeerConnection, socket, roomId]);\n\n  // Handle answer received\n  const handleAnswerReceived = useCallback(async (data) => {\n    const { answer, userId } = data;\n    console.log('Processing answer from:', userId);\n    const peerConnection = peerConnections.current.get(userId);\n    \n    if (peerConnection) {\n      try {\n        await peerConnection.setRemoteDescription(new RTCSessionDescription(answer));\n        console.log('Set remote answer for:', userId);\n      } catch (error) {\n        console.error('Error handling answer:', error);\n      }\n    } else {\n      console.error('No peer connection found for answer from:', userId);\n    }\n  }, []);\n\n  // Handle ICE candidate received\n  const handleIceCandidateReceived = useCallback(async (data) => {\n    const { candidate, userId } = data;\n    const peerConnection = peerConnections.current.get(userId);\n    \n    if (peerConnection) {\n      try {\n        await peerConnection.addIceCandidate(new RTCIceCandidate(candidate));\n      } catch (error) {\n        console.error('Error handling ICE candidate:', error);\n      }\n    }\n  }, []);\n\n  // Send offer to new user\n  const sendOffer = useCallback(async (userId) => {\n    const peerConnection = peerConnections.current.get(userId);\n    if (!peerConnection) {\n      console.log('No peer connection found for user:', userId);\n      return;\n    }\n\n    try {\n      const offer = await peerConnection.createOffer();\n      await peerConnection.setLocalDescription(offer);\n      \n      socket.emit('offer', {\n        offer,\n        roomId,\n        userId\n      });\n      console.log('Offer sent to user:', userId);\n    } catch (error) {\n      console.error('Error sending offer:', error);\n    }\n  }, [socket, roomId]);\n\n  // Initialize local media stream\n  useEffect(() => {\n    const initLocalStream = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: true\n        });\n        setLocalStream(stream);\n        if (localVideoRef.current) {\n          localVideoRef.current.srcObject = stream;\n        }\n      } catch (error) {\n        console.error('Error accessing media devices:', error);\n        alert('Unable to access camera and microphone. Please check permissions.');\n      }\n    };\n\n    initLocalStream();\n  }, []);\n\n  // Socket event handlers\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleUserConnected = (userId) => {\n      console.log('User connected:', userId);\n      // Only increment if it's not ourselves\n      if (userId !== userName) {\n        setParticipants(prev => prev + 1);\n        createPeerConnection(userId);\n        \n        // Only send offer if we are the initiator (first user or designated initiator)\n        if (isInitiator) {\n          console.log('Sending offer as initiator to:', userId);\n          setTimeout(() => {\n            sendOffer(userId);\n          }, 1000); // Small delay to ensure peer connection is ready\n        } else {\n          console.log('Waiting for offer from initiator:', userId);\n        }\n      } else {\n        console.log('Ignoring self-connection event for:', userId);\n      }\n    };\n\n    const handleUserDisconnected = (userId) => {\n      console.log('User disconnected:', userId);\n      setParticipants(prev => prev - 1);\n      if (peerConnections.current.has(userId)) {\n        peerConnections.current.get(userId).close();\n        peerConnections.current.delete(userId);\n      }\n      setRemoteStreams(prev => {\n        const newStreams = new Map(prev);\n        newStreams.delete(userId);\n        return newStreams;\n      });\n    };\n\n    const handleOffer = async (data) => {\n      console.log('Received offer from:', data.userId);\n      await handleOfferReceived(data);\n    };\n\n    const handleAnswer = async (data) => {\n      console.log('Received answer from:', data.userId);\n      await handleAnswerReceived(data);\n    };\n\n    const handleIceCandidate = async (data) => {\n      console.log('Received ICE candidate from:', data.userId);\n      await handleIceCandidateReceived(data);\n    };\n\n    const handleMessage = (data) => {\n      setMessages(prev => [...prev, data]);\n    };\n\n    socket.on('user-connected', handleUserConnected);\n    socket.on('user-disconnected', handleUserDisconnected);\n    socket.on('offer', handleOffer);\n    socket.on('answer', handleAnswer);\n    socket.on('ice-candidate', handleIceCandidate);\n    socket.on('receive-message', handleMessage);\n\n    return () => {\n      socket.off('user-connected', handleUserConnected);\n      socket.off('user-disconnected', handleUserDisconnected);\n      socket.off('offer', handleOffer);\n      socket.off('answer', handleAnswer);\n      socket.off('ice-candidate', handleIceCandidate);\n      socket.off('receive-message', handleMessage);\n    };\n  }, [socket, sendOffer, createPeerConnection, handleOfferReceived, handleAnswerReceived, handleIceCandidateReceived, isInitiator, userName]);\n\n  // Join room when socket is ready\n  useEffect(() => {\n    if (socket && roomId) {\n      console.log('Joining room:', roomId, 'with user:', userName);\n      socket.emit('join-room', roomId, userName);\n    }\n  }, [socket, roomId, userName]);\n\n  // Listen for room-joined event to determine if we're the initiator\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleRoomJoined = (data) => {\n      console.log('Room joined response:', data);\n      if (data.isInitiator) {\n        setIsInitiator(true);\n        console.log('I am the initiator for this room');\n      } else {\n        setIsInitiator(false);\n        console.log('I am not the initiator, waiting for offers');\n      }\n      \n      // Set the correct participant count\n      if (data.totalParticipants) {\n        setParticipants(data.totalParticipants);\n        console.log(`Total participants in room: ${data.totalParticipants}`);\n      }\n      \n      // Create peer connections for existing participants\n      if (data.existingParticipants && data.existingParticipants.length > 0) {\n        console.log('Creating peer connections for existing participants:', data.existingParticipants);\n        data.existingParticipants.forEach(userId => {\n          if (userId !== userName) { // Don't create connection to self\n            createPeerConnection(userId);\n            // If we're the initiator, send offers to existing participants\n            if (data.isInitiator) {\n              setTimeout(() => {\n                sendOffer(userId);\n              }, 1000);\n            }\n          }\n        });\n      }\n    };\n\n    socket.on('room-joined', handleRoomJoined);\n\n    return () => {\n      socket.off('room-joined', handleRoomJoined);\n    };\n  }, [socket, createPeerConnection, sendOffer, userName]);\n\n  // Toggle audio\n  const toggleAudio = () => {\n    if (localStream) {\n      const audioTrack = localStream.getAudioTracks()[0];\n      if (audioTrack) {\n        audioTrack.enabled = !audioTrack.enabled;\n        setIsAudioMuted(!audioTrack.enabled);\n      }\n    }\n  };\n\n  // Toggle video\n  const toggleVideo = () => {\n    if (localStream) {\n      const videoTrack = localStream.getVideoTracks()[0];\n      if (videoTrack) {\n        videoTrack.enabled = !videoTrack.enabled;\n        setIsVideoMuted(!videoTrack.enabled);\n      }\n    }\n  };\n\n  // Toggle screen sharing\n  const toggleScreenShare = async () => {\n    try {\n      if (!isScreenSharing) {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true,\n          audio: true\n        });\n        \n        // Replace video track in all peer connections\n        const videoTrack = screenStream.getVideoTracks()[0];\n        peerConnections.current.forEach(peerConnection => {\n          const sender = peerConnection.getSenders().find(s => \n            s.track && s.track.kind === 'video'\n          );\n          if (sender) {\n            sender.replaceTrack(videoTrack);\n          }\n        });\n\n        // Update local video\n        if (localVideoRef.current) {\n          localVideoRef.current.srcObject = screenStream;\n        }\n\n        setIsScreenSharing(true);\n\n        // Handle screen share end\n        videoTrack.onended = () => {\n          toggleScreenShare();\n        };\n      } else {\n        // Stop screen sharing and restore camera\n        if (localStream) {\n          const videoTrack = localStream.getVideoTracks()[0];\n          peerConnections.current.forEach(peerConnection => {\n            const sender = peerConnection.getSenders().find(s => \n              s.track && s.track.kind === 'video'\n            );\n            if (sender) {\n              sender.replaceTrack(videoTrack);\n            }\n          });\n\n          if (localVideoRef.current) {\n            localVideoRef.current.srcObject = localStream;\n          }\n        }\n        setIsScreenSharing(false);\n      }\n    } catch (error) {\n      console.error('Error toggling screen share:', error);\n    }\n  };\n\n  // Send message\n  const sendMessage = () => {\n    if (newMessage.trim() && socket) {\n      const message = {\n        text: newMessage.trim(),\n        sender: userName,\n        timestamp: new Date().toISOString()\n      };\n      \n      socket.emit('send-message', { message, roomId });\n      setNewMessage('');\n    }\n  };\n\n  // Leave room\n  const leaveRoom = () => {\n    if (socket) {\n      socket.emit('leave-room', roomId, userName);\n    }\n    \n    // Close all peer connections\n    peerConnections.current.forEach(peerConnection => {\n      peerConnection.close();\n    });\n    \n    // Stop local stream\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n    }\n    \n    navigate('/');\n  };\n\n  // Handle key press for message input\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n\n  return (\n    <Container>\n      <Header>\n        <RoomInfo>\n          <Users size={20} />\n          <RoomId>Room: {roomId}</RoomId>\n          <span>({participants} participants)</span>\n        </RoomInfo>\n      </Header>\n\n      <MainContent>\n        <VideoGrid>\n          {/* Local video */}\n          <VideoContainer>\n            <StyledVideo\n              ref={localVideoRef}\n              autoPlay\n              muted\n              playsInline\n            />\n            <VideoLabel>{userName} (You)</VideoLabel>\n          </VideoContainer>\n\n          {/* Remote videos */}\n          {Array.from(remoteStreams.entries()).map(([userId, stream]) => (\n            <VideoContainer key={userId}>\n              <StyledVideo\n                ref={ref => {\n                  if (ref) {\n                    ref.srcObject = stream;\n                    remoteVideoRefs.current.set(userId, ref);\n                  }\n                }}\n                autoPlay\n                playsInline\n              />\n              <VideoLabel>{userId}</VideoLabel>\n            </VideoContainer>\n          ))}\n        </VideoGrid>\n\n        {showChat && (\n          <ChatPanel>\n            <ChatHeader>Chat</ChatHeader>\n            <ChatMessages>\n              {messages.map((message, index) => (\n                <Message key={index} isOwn={message.sender === userName}>\n                  <MessageSender>{message.sender}</MessageSender>\n                  {message.text}\n                </Message>\n              ))}\n            </ChatMessages>\n            <ChatInput>\n              <MessageInput\n                type=\"text\"\n                placeholder=\"Type a message...\"\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n                onKeyPress={handleKeyPress}\n              />\n              <SendButton onClick={sendMessage}>\n                <Send size={16} />\n              </SendButton>\n            </ChatInput>\n          </ChatPanel>\n        )}\n      </MainContent>\n\n      <Controls>\n        <ControlButton\n          onClick={toggleAudio}\n          active={!isAudioMuted}\n          title={isAudioMuted ? 'Unmute' : 'Mute'}\n        >\n          {isAudioMuted ? <MicOff size={20} /> : <Mic size={20} />}\n        </ControlButton>\n\n        <ControlButton\n          onClick={toggleVideo}\n          active={!isVideoMuted}\n          title={isVideoMuted ? 'Turn on camera' : 'Turn off camera'}\n        >\n          {isVideoMuted ? <VideoOff size={20} /> : <Video size={20} />}\n        </ControlButton>\n\n        <ControlButton\n          onClick={toggleScreenShare}\n          active={isScreenSharing}\n          title={isScreenSharing ? 'Stop sharing' : 'Share screen'}\n        >\n          <Monitor size={20} />\n        </ControlButton>\n\n        <ControlButton\n          onClick={() => setShowChat(!showChat)}\n          active={showChat}\n          title=\"Toggle chat\"\n        >\n          <MessageSquare size={20} />\n        </ControlButton>\n\n        <ControlButton\n          onClick={leaveRoom}\n          className=\"leave\"\n          title=\"Leave room\"\n        >\n          <Phone size={20} />\n        </ControlButton>\n      </Controls>\n    </Container>\n  );\n};\n\nexport default VideoRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}