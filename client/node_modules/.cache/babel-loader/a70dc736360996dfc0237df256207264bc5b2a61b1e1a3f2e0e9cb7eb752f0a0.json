{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/matty/untitled folder/CMAMeet/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14,_templateObject15,_templateObject16,_templateObject17,_templateObject18,_templateObject19,_templateObject20,_templateObject21,_templateObject22,_templateObject23,_templateObject24,_templateObject25,_templateObject26,_templateObject27,_templateObject28,_templateObject29,_templateObject30,_templateObject31,_templateObject32,_templateObject33,_templateObject34,_templateObject35,_templateObject36,_templateObject37;import React,{useState,useEffect,useRef,useCallback}from'react';import{useParams,useSearchParams,useNavigate}from'react-router-dom';import io from'socket.io-client';import styled from'styled-components';import{Mic,MicOff,Video,VideoOff,Monitor,MessageSquare,Phone,Users,Send,Share2,Copy,Check}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  min-height: 100vh;\\n  background: #1a1a1a;\\n  display: flex;\\n  flex-direction: column;\\n\"])));const Header=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  background: #2d2d2d;\\n  padding: 15px 20px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  color: white;\\n\"])));const RoomInfo=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n\"])));const RoomId=styled.span(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  font-weight: 600;\\n  font-size: 1.1rem;\\n\"])));const MainContent=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  display: flex;\\n  position: relative;\\n\"])));const VideoGrid=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\\n  gap: 10px;\\n  padding: 20px;\\n  align-content: start;\\n\"])));const VideoContainer=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  position: relative;\\n  background: #333;\\n  border-radius: 10px;\\n  overflow: hidden;\\n  aspect-ratio: 16/9;\\n  min-height: 200px;\\n  border: \",\";\\n  transition: border-color 0.3s ease;\\n  box-shadow: \",\";\\n\"])),props=>props.isActiveSpeaker?'3px solid #667eea':'3px solid transparent',props=>props.isActiveSpeaker?'0 0 20px rgba(102, 126, 234, 0.5)':'none');const StyledVideo=styled.video(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  object-fit: cover;\\n\"])));const VideoLabel=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  bottom: 10px;\\n  left: 10px;\\n  background: rgba(0, 0, 0, 0.7);\\n  color: white;\\n  padding: 5px 10px;\\n  border-radius: 5px;\\n  font-size: 0.9rem;\\n\"])));const ChatPanel=styled.div(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  width: 350px;\\n  background: #2d2d2d;\\n  display: flex;\\n  flex-direction: column;\\n  border-left: 1px solid #444;\\n  \\n  @media (max-width: 768px) {\\n    position: fixed;\\n    top: 0;\\n    right: 0;\\n    height: 100vh;\\n    width: 100vw;\\n    z-index: 1000;\\n    border-left: none;\\n  }\\n\"])));const ChatHeader=styled.div(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  padding: 15px 20px;\\n  border-bottom: 1px solid #444;\\n  color: white;\\n  font-weight: 600;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n\"])));const CloseButton=styled.button(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  background: none;\\n  border: none;\\n  color: white;\\n  font-size: 1.5rem;\\n  cursor: pointer;\\n  padding: 5px;\\n  display: none;\\n  \\n  @media (max-width: 768px) {\\n    display: block;\\n  }\\n\"])));const ChatMessages=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  padding: 15px;\\n  overflow-y: auto;\\n  display: flex;\\n  flex-direction: column;\\n  gap: 10px;\\n\"])));const Message=styled.div(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  color: white;\\n  padding: 10px 15px;\\n  border-radius: 10px;\\n  max-width: 80%;\\n  align-self: \",\";\\n  word-wrap: break-word;\\n\"])),props=>props.isOwn?'#667eea':'#444',props=>props.isOwn?'flex-end':'flex-start');const MessageSender=styled.div(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  font-size: 0.8rem;\\n  opacity: 0.7;\\n  margin-bottom: 5px;\\n\"])));const ChatInput=styled.div(_templateObject14||(_templateObject14=_taggedTemplateLiteral([\"\\n  padding: 15px;\\n  border-top: 1px solid #444;\\n  display: flex;\\n  gap: 10px;\\n\"])));const MessageInput=styled.input(_templateObject15||(_templateObject15=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  padding: 10px 15px;\\n  border: 1px solid #555;\\n  border-radius: 20px;\\n  background: #333;\\n  color: white;\\n  font-size: 0.9rem;\\n\\n  &:focus {\\n    outline: none;\\n    border-color: #667eea;\\n  }\\n\\n  &::placeholder {\\n    color: #999;\\n  }\\n\"])));const SendButton=styled.button(_templateObject16||(_templateObject16=_taggedTemplateLiteral([\"\\n  background: #667eea;\\n  border: none;\\n  border-radius: 50%;\\n  width: 40px;\\n  height: 40px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  color: white;\\n  cursor: pointer;\\n  transition: background 0.3s ease;\\n\\n  &:hover {\\n    background: #5a6fd8;\\n  }\\n\"])));const Controls=styled.div(_templateObject17||(_templateObject17=_taggedTemplateLiteral([\"\\n  background: #2d2d2d;\\n  padding: 20px;\\n  display: flex;\\n  justify-content: center;\\n  gap: 15px;\\n  border-top: 1px solid #444;\\n\"])));const ControlButton=styled.button(_templateObject18||(_templateObject18=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  border: none;\\n  border-radius: 50%;\\n  width: 50px;\\n  height: 50px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  color: white;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n\\n  &:hover {\\n    background: \",\";\\n  }\\n\\n  &.leave {\\n    background: #dc3545;\\n    \\n    &:hover {\\n      background: #c82333;\\n    }\\n  }\\n\"])),props=>props.active?'#667eea':'#444',props=>props.active?'#5a6fd8':'#555');const ShareModal=styled.div(_templateObject19||(_templateObject19=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background: rgba(0, 0, 0, 0.8);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  z-index: 2000;\\n\"])));const ShareModalContent=styled.div(_templateObject20||(_templateObject20=_taggedTemplateLiteral([\"\\n  background: #2d2d2d;\\n  border-radius: 15px;\\n  padding: 30px;\\n  max-width: 500px;\\n  width: 90%;\\n  color: white;\\n\"])));const ShareModalHeader=styled.div(_templateObject21||(_templateObject21=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 20px;\\n\"])));const ShareModalTitle=styled.h3(_templateObject22||(_templateObject22=_taggedTemplateLiteral([\"\\n  margin: 0;\\n  font-size: 1.3rem;\\n  color: white;\\n\"])));const CloseModalButton=styled.button(_templateObject23||(_templateObject23=_taggedTemplateLiteral([\"\\n  background: none;\\n  border: none;\\n  color: white;\\n  font-size: 1.5rem;\\n  cursor: pointer;\\n  padding: 5px;\\n  \\n  &:hover {\\n    opacity: 0.7;\\n  }\\n\"])));const ShareSection=styled.div(_templateObject24||(_templateObject24=_taggedTemplateLiteral([\"\\n  margin-bottom: 20px;\\n\"])));const ShareLabel=styled.label(_templateObject25||(_templateObject25=_taggedTemplateLiteral([\"\\n  display: block;\\n  margin-bottom: 10px;\\n  font-weight: 600;\\n  color: #ccc;\\n\"])));const ShareInputContainer=styled.div(_templateObject26||(_templateObject26=_taggedTemplateLiteral([\"\\n  display: flex;\\n  gap: 10px;\\n  align-items: center;\\n\"])));const ShareInput=styled.input(_templateObject27||(_templateObject27=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  padding: 12px 15px;\\n  border: 1px solid #555;\\n  border-radius: 8px;\\n  background: #333;\\n  color: white;\\n  font-size: 0.9rem;\\n  \\n  &:focus {\\n    outline: none;\\n    border-color: #667eea;\\n  }\\n\"])));const CopyButton=styled.button(_templateObject28||(_templateObject28=_taggedTemplateLiteral([\"\\n  background: #667eea;\\n  border: none;\\n  color: white;\\n  padding: 12px 15px;\\n  border-radius: 8px;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  font-weight: 600;\\n  transition: all 0.3s ease;\\n  \\n  &:hover {\\n    background: #5a6fd8;\\n  }\\n  \\n  &:disabled {\\n    background: #28a745;\\n    cursor: not-allowed;\\n  }\\n\"])));const ShareInstructions=styled.div(_templateObject29||(_templateObject29=_taggedTemplateLiteral([\"\\n  background: rgba(102, 126, 234, 0.1);\\n  border: 1px solid rgba(102, 126, 234, 0.3);\\n  border-radius: 8px;\\n  padding: 15px;\\n  margin-top: 15px;\\n\"])));const ShareInstructionsText=styled.p(_templateObject30||(_templateObject30=_taggedTemplateLiteral([\"\\n  margin: 0;\\n  font-size: 0.9rem;\\n  color: #ccc;\\n  line-height: 1.4;\\n\"])));// Name Entry Modal Components\nconst NameModal=styled.div(_templateObject31||(_templateObject31=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background: rgba(0, 0, 0, 0.8);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  z-index: 1000;\\n\"])));const NameModalContent=styled.div(_templateObject32||(_templateObject32=_taggedTemplateLiteral([\"\\n  background: white;\\n  border-radius: 12px;\\n  padding: 32px;\\n  max-width: 400px;\\n  width: 90%;\\n  text-align: center;\\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);\\n\"])));const NameModalHeader=styled.div(_templateObject33||(_templateObject33=_taggedTemplateLiteral([\"\\n  margin-bottom: 24px;\\n\"])));const NameModalTitle=styled.h2(_templateObject34||(_templateObject34=_taggedTemplateLiteral([\"\\n  margin: 0 0 8px 0;\\n  color: #333;\\n  font-size: 24px;\\n  font-weight: 600;\\n\"])));const NameModalSubtitle=styled.p(_templateObject35||(_templateObject35=_taggedTemplateLiteral([\"\\n  margin: 0;\\n  color: #666;\\n  font-size: 16px;\\n\"])));const NameInput=styled.input(_templateObject36||(_templateObject36=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  padding: 12px 16px;\\n  border: 2px solid #e1e5e9;\\n  border-radius: 8px;\\n  font-size: 16px;\\n  margin-bottom: 20px;\\n  box-sizing: border-box;\\n  transition: border-color 0.2s;\\n\\n  &:focus {\\n    outline: none;\\n    border-color: #007bff;\\n  }\\n\"])));const NameModalButton=styled.button(_templateObject37||(_templateObject37=_taggedTemplateLiteral([\"\\n  background: #007bff;\\n  color: white;\\n  border: none;\\n  padding: 12px 24px;\\n  border-radius: 8px;\\n  font-size: 16px;\\n  font-weight: 600;\\n  cursor: pointer;\\n  transition: background-color 0.2s;\\n  width: 100%;\\n\\n  &:hover {\\n    background: #0056b3;\\n  }\\n\\n  &:disabled {\\n    background: #ccc;\\n    cursor: not-allowed;\\n  }\\n\"])));const VideoRoom=()=>{const{roomId}=useParams();const[searchParams]=useSearchParams();const navigate=useNavigate();console.log('VideoRoom component rendering, roomId:',roomId);const[socket,setSocket]=useState(null);const[localStream,setLocalStream]=useState(null);const[remoteStreams,setRemoteStreams]=useState(new Map());const[isAudioMuted,setIsAudioMuted]=useState(false);const[isVideoMuted,setIsVideoMuted]=useState(false);const[isScreenSharing,setIsScreenSharing]=useState(false);const[showChat,setShowChat]=useState(false);const[messages,setMessages]=useState([]);const[newMessage,setNewMessage]=useState('');const[participants,setParticipants]=useState(1);const[isInitiator,setIsInitiator]=useState(false);const[showShareModal,setShowShareModal]=useState(false);const[linkCopied,setLinkCopied]=useState(false);const[showNameModal,setShowNameModal]=useState(false);const[tempUserName,setTempUserName]=useState('');const[activeSpeaker,setActiveSpeaker]=useState(null);const localVideoRef=useRef(null);const remoteVideoRefs=useRef(new Map());const peerConnections=useRef(new Map());const audioAnalyzers=useRef(new Map());const animationFrameRef=useRef(null);const userName=searchParams.get('name')||'Anonymous';// Check if we need to show the name entry modal\nuseEffect(()=>{const nameParam=searchParams.get('name');if(!nameParam||nameParam.trim()===''){setShowNameModal(true);}},[searchParams]);// Audio level analysis for active speaker detection\nconst createAudioAnalyzer=useCallback((stream,userId)=>{try{if(!stream)return null;const audioContext=new(window.AudioContext||window.webkitAudioContext)();const analyser=audioContext.createAnalyser();const microphone=audioContext.createMediaStreamSource(stream);const dataArray=new Uint8Array(analyser.frequencyBinCount);analyser.fftSize=256;analyser.smoothingTimeConstant=0.8;microphone.connect(analyser);audioAnalyzers.current.set(userId,{analyser,dataArray,audioContext});return{analyser,dataArray,audioContext};}catch(error){console.error('Error creating audio analyzer:',error);return null;}},[]);const analyzeAudioLevels=useCallback(()=>{try{let maxLevel=0;let currentActiveSpeaker=null;audioAnalyzers.current.forEach((_ref,userId)=>{let{analyser,dataArray}=_ref;if(analyser&&dataArray){analyser.getByteFrequencyData(dataArray);const average=dataArray.reduce((sum,value)=>sum+value,0)/dataArray.length;const level=average/255;// Normalize to 0-1\nif(level>maxLevel&&level>0.1){// Threshold to avoid noise\nmaxLevel=level;currentActiveSpeaker=userId;}}});setActiveSpeaker(currentActiveSpeaker);animationFrameRef.current=requestAnimationFrame(analyzeAudioLevels);}catch(error){console.error('Error in audio analysis:',error);}},[]);const startAudioAnalysis=useCallback(()=>{if(animationFrameRef.current){cancelAnimationFrame(animationFrameRef.current);}analyzeAudioLevels();},[analyzeAudioLevels]);const stopAudioAnalysis=useCallback(()=>{if(animationFrameRef.current){cancelAnimationFrame(animationFrameRef.current);animationFrameRef.current=null;}},[]);// Browser notification functionality\nconst requestNotificationPermission=useCallback(async()=>{try{if('Notification'in window&&Notification.permission==='default'){await Notification.requestPermission();}}catch(error){console.error('Error requesting notification permission:',error);}},[]);const showNotification=useCallback(message=>{try{if('Notification'in window&&Notification.permission==='granted'){new Notification('New CMA Meeting Message',{body:\"\".concat(message.sender,\": \").concat(message.text),icon:'/favicon.ico',tag:'cma-chat',requireInteraction:false});}}catch(error){console.error('Error showing notification:',error);}},[]);// Initialize socket connection\nuseEffect(()=>{const socketUrl=process.env.NODE_ENV==='production'?window.location.origin:'http://localhost:5001';console.log('Connecting to socket:',socketUrl);const newSocket=io(socketUrl,{transports:['polling','websocket'],timeout:20000,forceNew:true,upgrade:false,rememberUpgrade:false});newSocket.on('connect',()=>{console.log('Socket connected with ID:',newSocket.id);console.log('Socket transport:',newSocket.io.engine.transport.name);});newSocket.on('disconnect',reason=>{console.log('Socket disconnected, reason:',reason);});newSocket.on('connect_error',error=>{console.error('Socket connection error:',error);console.error('Error details:',error.message,error.description,error.context);// If WebSocket fails, try polling only\nif(error.message&&error.message.includes('websocket')){console.log('WebSocket failed, attempting polling-only connection...');newSocket.io.opts.transports=['polling'];newSocket.io.opts.upgrade=false;newSocket.connect();}});newSocket.on('reconnect',attemptNumber=>{console.log('Socket reconnected after',attemptNumber,'attempts');});newSocket.on('reconnect_error',error=>{console.error('Socket reconnection error:',error);});setSocket(newSocket);return()=>{newSocket.close();};},[]);// Create peer connection\nconst createPeerConnection=useCallback(userId=>{console.log('Creating peer connection for user:',userId);const peerConnection=new RTCPeerConnection({iceServers:[{urls:'stun:stun.l.google.com:19302'},{urls:'stun:stun1.l.google.com:19302'}]});// Add local stream tracks\nif(localStream){localStream.getTracks().forEach(track=>{peerConnection.addTrack(track,localStream);console.log('Added track to peer connection:',track.kind);});}else{console.log('No local stream available when creating peer connection');}// Handle remote stream\npeerConnection.ontrack=event=>{var _event$streams$;console.log('Received remote stream from:',userId);console.log('Remote stream tracks:',(_event$streams$=event.streams[0])===null||_event$streams$===void 0?void 0:_event$streams$.getTracks());const[remoteStream]=event.streams;setRemoteStreams(prev=>{const newMap=new Map(prev).set(userId,remoteStream);console.log('Updated remote streams map:',Array.from(newMap.keys()));return newMap;});// Create audio analyzer for remote stream (with error handling)\ntry{createAudioAnalyzer(remoteStream,userId);}catch(error){console.error('Error creating audio analyzer in peer connection:',error);}};// Handle ICE candidates\npeerConnection.onicecandidate=event=>{if(event.candidate){console.log('Sending ICE candidate to:',userId);socket.emit('ice-candidate',{candidate:event.candidate,roomId,userId});}};// Handle connection state changes\npeerConnection.onconnectionstatechange=()=>{console.log(\"Connection state with \".concat(userId,\":\"),peerConnection.connectionState);};peerConnections.current.set(userId,peerConnection);},[localStream,socket,roomId,createAudioAnalyzer]);// Handle offer received\nconst handleOfferReceived=useCallback(async data=>{const{offer,userId}=data;console.log('Processing offer from:',userId);let peerConnection=peerConnections.current.get(userId);if(!peerConnection){console.log('Creating new peer connection for offer from:',userId);createPeerConnection(userId);peerConnection=peerConnections.current.get(userId);}try{await peerConnection.setRemoteDescription(new RTCSessionDescription(offer));console.log('Set remote description for:',userId);const answer=await peerConnection.createAnswer();await peerConnection.setLocalDescription(answer);console.log('Created and set local answer for:',userId);socket.emit('answer',{answer,roomId,userId});console.log('Sent answer to:',userId);}catch(error){console.error('Error handling offer:',error);}},[createPeerConnection,socket,roomId,createAudioAnalyzer]);// Handle answer received\nconst handleAnswerReceived=useCallback(async data=>{const{answer,userId}=data;console.log('Processing answer from:',userId);const peerConnection=peerConnections.current.get(userId);if(peerConnection){try{await peerConnection.setRemoteDescription(new RTCSessionDescription(answer));console.log('Set remote answer for:',userId);}catch(error){console.error('Error handling answer:',error);}}else{console.error('No peer connection found for answer from:',userId);}},[]);// Handle ICE candidate received\nconst handleIceCandidateReceived=useCallback(async data=>{const{candidate,userId}=data;const peerConnection=peerConnections.current.get(userId);if(peerConnection){try{await peerConnection.addIceCandidate(new RTCIceCandidate(candidate));}catch(error){console.error('Error handling ICE candidate:',error);}}},[]);// Send offer to new user\nconst sendOffer=useCallback(async userId=>{const peerConnection=peerConnections.current.get(userId);if(!peerConnection){console.log('No peer connection found for user:',userId);return;}try{const offer=await peerConnection.createOffer();await peerConnection.setLocalDescription(offer);socket.emit('offer',{offer,roomId,userId});console.log('Offer sent to user:',userId);}catch(error){console.error('Error sending offer:',error);}},[socket,roomId]);// Initialize local media stream\nuseEffect(()=>{const initLocalStream=async()=>{try{const stream=await navigator.mediaDevices.getUserMedia({video:true,audio:true});setLocalStream(stream);if(localVideoRef.current){localVideoRef.current.srcObject=stream;}// Create audio analyzer for local stream (with error handling)\ntry{createAudioAnalyzer(stream,userName);}catch(error){console.error('Error creating audio analyzer for local stream:',error);}}catch(error){console.error('Error accessing media devices:',error);alert('Unable to access camera and microphone. Please check permissions.');}};initLocalStream();},[createAudioAnalyzer,userName]);// Socket event handlers\nuseEffect(()=>{if(!socket)return;const handleUserConnected=userId=>{console.log('User connected:',userId);// Only increment if it's not ourselves\nif(userId!==userName){setParticipants(prev=>prev+1);createPeerConnection(userId);// Only send offer if we are the initiator (first user or designated initiator)\nif(isInitiator){console.log('Sending offer as initiator to:',userId);setTimeout(()=>{sendOffer(userId);},1000);// Small delay to ensure peer connection is ready\n}else{console.log('Waiting for offer from initiator:',userId);}}else{console.log('Ignoring self-connection event for:',userId);}};const handleUserDisconnected=userId=>{console.log('User disconnected:',userId);setParticipants(prev=>prev-1);if(peerConnections.current.has(userId)){peerConnections.current.get(userId).close();peerConnections.current.delete(userId);}setRemoteStreams(prev=>{const newStreams=new Map(prev);newStreams.delete(userId);return newStreams;});// Clean up audio analyzer\nif(audioAnalyzers.current.has(userId)){const{audioContext}=audioAnalyzers.current.get(userId);audioContext.close();audioAnalyzers.current.delete(userId);}};const handleOffer=async data=>{console.log('Received offer from:',data.userId);await handleOfferReceived(data);};const handleAnswer=async data=>{console.log('Received answer from:',data.userId);await handleAnswerReceived(data);};const handleIceCandidate=async data=>{console.log('Received ICE candidate from:',data.userId);await handleIceCandidateReceived(data);};const handleMessage=data=>{setMessages(prev=>[...prev,data]);// Show notification if chat is not visible or message is from someone else\nif(!showChat||data.sender!==userName){showNotification(data);}};socket.on('user-connected',handleUserConnected);socket.on('user-disconnected',handleUserDisconnected);socket.on('offer',handleOffer);socket.on('answer',handleAnswer);socket.on('ice-candidate',handleIceCandidate);socket.on('receive-message',handleMessage);return()=>{socket.off('user-connected',handleUserConnected);socket.off('user-disconnected',handleUserDisconnected);socket.off('offer',handleOffer);socket.off('answer',handleAnswer);socket.off('ice-candidate',handleIceCandidate);socket.off('receive-message',handleMessage);};},[socket,sendOffer,createPeerConnection,handleOfferReceived,handleAnswerReceived,handleIceCandidateReceived,isInitiator,userName,showChat,showNotification]);// Join room when socket is ready\nuseEffect(()=>{if(socket&&roomId){console.log('Joining room:',roomId,'with user:',userName);socket.emit('join-room',roomId,userName);}},[socket,roomId,userName]);// Listen for room-joined event to determine if we're the initiator\nuseEffect(()=>{if(!socket)return;const handleRoomJoined=data=>{console.log('Room joined response:',data);if(data.isInitiator){setIsInitiator(true);console.log('I am the initiator for this room');}else{setIsInitiator(false);console.log('I am not the initiator, waiting for offers');}// Set the correct participant count\nif(data.totalParticipants){setParticipants(data.totalParticipants);console.log(\"Total participants in room: \".concat(data.totalParticipants));}// Create peer connections for existing participants\nif(data.existingParticipants&&data.existingParticipants.length>0){console.log('Creating peer connections for existing participants:',data.existingParticipants);data.existingParticipants.forEach(userId=>{if(userId!==userName){// Don't create connection to self\ncreatePeerConnection(userId);// If we're the initiator, send offers to existing participants\nif(data.isInitiator){setTimeout(()=>{sendOffer(userId);},1000);}}});}};socket.on('room-joined',handleRoomJoined);return()=>{socket.off('room-joined',handleRoomJoined);};},[socket,createPeerConnection,sendOffer,userName]);// Share room functionality\nconst getShareLink=()=>{const baseUrl=window.location.origin;return\"\".concat(baseUrl,\"/room/\").concat(roomId,\"?name=\");};const copyToClipboard=async()=>{try{await navigator.clipboard.writeText(getShareLink());setLinkCopied(true);setTimeout(()=>setLinkCopied(false),2000);}catch(err){console.error('Failed to copy: ',err);// Fallback for older browsers\nconst textArea=document.createElement('textarea');textArea.value=getShareLink();document.body.appendChild(textArea);textArea.select();document.execCommand('copy');document.body.removeChild(textArea);setLinkCopied(true);setTimeout(()=>setLinkCopied(false),2000);}};const openShareModal=()=>{setShowShareModal(true);setLinkCopied(false);};const closeShareModal=()=>{setShowShareModal(false);setLinkCopied(false);};// Name modal functions\nconst handleNameSubmit=()=>{if(tempUserName.trim()){// Update the URL with the entered name\nconst newUrl=\"\".concat(window.location.pathname,\"?name=\").concat(encodeURIComponent(tempUserName.trim()));window.history.replaceState({},'',newUrl);setShowNameModal(false);// Reload the page to pick up the new name parameter\nwindow.location.reload();}};const handleNameKeyPress=e=>{if(e.key==='Enter'){handleNameSubmit();}};// Toggle audio\nconst toggleAudio=()=>{if(localStream){const audioTrack=localStream.getAudioTracks()[0];if(audioTrack){audioTrack.enabled=!audioTrack.enabled;setIsAudioMuted(!audioTrack.enabled);}}};// Toggle video\nconst toggleVideo=()=>{if(localStream){const videoTrack=localStream.getVideoTracks()[0];if(videoTrack){videoTrack.enabled=!videoTrack.enabled;setIsVideoMuted(!videoTrack.enabled);}}};// Toggle screen sharing\nconst toggleScreenShare=async()=>{try{if(!isScreenSharing){const screenStream=await navigator.mediaDevices.getDisplayMedia({video:true,audio:true});// Replace video track in all peer connections\nconst videoTrack=screenStream.getVideoTracks()[0];peerConnections.current.forEach(peerConnection=>{const sender=peerConnection.getSenders().find(s=>s.track&&s.track.kind==='video');if(sender){sender.replaceTrack(videoTrack);}});// Update local video\nif(localVideoRef.current){localVideoRef.current.srcObject=screenStream;}setIsScreenSharing(true);// Handle screen share end\nvideoTrack.onended=()=>{toggleScreenShare();};}else{// Stop screen sharing and restore camera\nif(localStream){const videoTrack=localStream.getVideoTracks()[0];peerConnections.current.forEach(peerConnection=>{const sender=peerConnection.getSenders().find(s=>s.track&&s.track.kind==='video');if(sender){sender.replaceTrack(videoTrack);}});if(localVideoRef.current){localVideoRef.current.srcObject=localStream;}}setIsScreenSharing(false);}}catch(error){console.error('Error toggling screen share:',error);}};// Send message\nconst sendMessage=()=>{if(newMessage.trim()&&socket){const message={text:newMessage.trim(),sender:userName,timestamp:new Date().toISOString()};socket.emit('send-message',{message,roomId});setNewMessage('');}};// Leave room\nconst leaveRoom=()=>{if(socket){socket.emit('leave-room',roomId,userName);}// Close all peer connections\npeerConnections.current.forEach(peerConnection=>{peerConnection.close();});// Stop local stream\nif(localStream){localStream.getTracks().forEach(track=>track.stop());}navigate('/');};// Handle key press for message input\nconst handleKeyPress=e=>{if(e.key==='Enter'){sendMessage();}};// Start audio analysis when we have streams\nuseEffect(()=>{if(localStream||remoteStreams.size>0){startAudioAnalysis();}else{stopAudioAnalysis();}return()=>{stopAudioAnalysis();// Clean up all audio analyzers\nconst currentAnalyzers=audioAnalyzers.current;currentAnalyzers.forEach(_ref2=>{let{audioContext}=_ref2;audioContext.close();});currentAnalyzers.clear();};},[localStream,remoteStreams,startAudioAnalysis,stopAudioAnalysis]);// Request notification permission on component mount\nuseEffect(()=>{requestNotificationPermission();},[requestNotificationPermission]);// Ping server every 5 minutes to keep Render service alive\nuseEffect(()=>{const pingServer=async()=>{try{const response=await fetch('/api/ping');if(response.ok){const data=await response.json();console.log('Server ping successful:',data.message);}else{console.warn('Server ping failed:',response.status);}}catch(error){console.error('Server ping error:',error);}};// Ping immediately on mount\npingServer();// Set up interval to ping every 5 minutes (300,000 ms)\nconst pingInterval=setInterval(pingServer,5*60*1000);return()=>{clearInterval(pingInterval);};},[]);// Add error boundary fallback\nif(!roomId){return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Header,{children:/*#__PURE__*/_jsxs(RoomInfo,{children:[/*#__PURE__*/_jsx(Users,{size:20}),/*#__PURE__*/_jsx(RoomId,{children:\"CMA Meeting: Loading...\"})]})}),/*#__PURE__*/_jsx(MainContent,{children:/*#__PURE__*/_jsx(\"div\",{style:{color:'white',padding:'20px',textAlign:'center'},children:\"Loading meeting room...\"})})]});}return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Header,{children:/*#__PURE__*/_jsxs(RoomInfo,{children:[/*#__PURE__*/_jsx(Users,{size:20}),/*#__PURE__*/_jsxs(RoomId,{children:[\"CMA Meeting: \",roomId]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"(\",participants,\" members)\"]})]})}),/*#__PURE__*/_jsxs(MainContent,{children:[/*#__PURE__*/_jsxs(VideoGrid,{children:[/*#__PURE__*/_jsxs(VideoContainer,{isActiveSpeaker:activeSpeaker===userName,children:[/*#__PURE__*/_jsx(StyledVideo,{ref:localVideoRef,autoPlay:true,muted:true,playsInline:true}),/*#__PURE__*/_jsxs(VideoLabel,{children:[userName,\" (You)\"]})]}),Array.from(remoteStreams.entries()).map(_ref3=>{let[userId,stream]=_ref3;console.log('Rendering remote video for user:',userId,'stream:',stream);return/*#__PURE__*/_jsxs(VideoContainer,{isActiveSpeaker:activeSpeaker===userId,children:[/*#__PURE__*/_jsx(StyledVideo,{ref:ref=>{if(ref){ref.srcObject=stream;remoteVideoRefs.current.set(userId,ref);console.log('Set remote video srcObject for user:',userId);}},autoPlay:true,playsInline:true}),/*#__PURE__*/_jsx(VideoLabel,{children:userId})]},userId);})]}),showChat&&/*#__PURE__*/_jsxs(ChatPanel,{children:[/*#__PURE__*/_jsxs(ChatHeader,{children:[/*#__PURE__*/_jsx(\"span\",{children:\"CMA Fellowship Chat\"}),/*#__PURE__*/_jsx(CloseButton,{onClick:()=>setShowChat(false),children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(ChatMessages,{children:messages.map((message,index)=>/*#__PURE__*/_jsxs(Message,{isOwn:message.sender===userName,children:[/*#__PURE__*/_jsx(MessageSender,{children:message.sender}),message.text]},index))}),/*#__PURE__*/_jsxs(ChatInput,{children:[/*#__PURE__*/_jsx(MessageInput,{type:\"text\",placeholder:\"Share your experience, strength, and hope...\",value:newMessage,onChange:e=>setNewMessage(e.target.value),onKeyPress:handleKeyPress}),/*#__PURE__*/_jsx(SendButton,{onClick:sendMessage,children:/*#__PURE__*/_jsx(Send,{size:16})})]})]})]}),/*#__PURE__*/_jsxs(Controls,{children:[/*#__PURE__*/_jsx(ControlButton,{onClick:toggleAudio,active:!isAudioMuted,title:isAudioMuted?'Unmute':'Mute',children:isAudioMuted?/*#__PURE__*/_jsx(MicOff,{size:20}):/*#__PURE__*/_jsx(Mic,{size:20})}),/*#__PURE__*/_jsx(ControlButton,{onClick:toggleVideo,active:!isVideoMuted,title:isVideoMuted?'Turn on camera':'Turn off camera',children:isVideoMuted?/*#__PURE__*/_jsx(VideoOff,{size:20}):/*#__PURE__*/_jsx(Video,{size:20})}),/*#__PURE__*/_jsx(ControlButton,{onClick:toggleScreenShare,active:isScreenSharing,title:isScreenSharing?'Stop sharing':'Share screen',children:/*#__PURE__*/_jsx(Monitor,{size:20})}),/*#__PURE__*/_jsx(ControlButton,{onClick:()=>setShowChat(!showChat),active:showChat,title:\"Toggle chat\",children:/*#__PURE__*/_jsx(MessageSquare,{size:20})}),/*#__PURE__*/_jsx(ControlButton,{onClick:openShareModal,title:\"Share room link\",children:/*#__PURE__*/_jsx(Share2,{size:20})}),/*#__PURE__*/_jsx(ControlButton,{onClick:leaveRoom,className:\"leave\",title:\"Leave room\",children:/*#__PURE__*/_jsx(Phone,{size:20})})]}),showShareModal&&/*#__PURE__*/_jsx(ShareModal,{onClick:closeShareModal,children:/*#__PURE__*/_jsxs(ShareModalContent,{onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(ShareModalHeader,{children:[/*#__PURE__*/_jsx(ShareModalTitle,{children:\"Share Meeting\"}),/*#__PURE__*/_jsx(CloseModalButton,{onClick:closeShareModal,children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(ShareSection,{children:[/*#__PURE__*/_jsx(ShareLabel,{children:\"Meeting Link\"}),/*#__PURE__*/_jsxs(ShareInputContainer,{children:[/*#__PURE__*/_jsx(ShareInput,{type:\"text\",value:getShareLink(),readOnly:true}),/*#__PURE__*/_jsx(CopyButton,{onClick:copyToClipboard,disabled:linkCopied,children:linkCopied?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Check,{size:16}),\"Copied!\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Copy,{size:16}),\"Copy\"]})})]})]}),/*#__PURE__*/_jsx(ShareInstructions,{children:/*#__PURE__*/_jsxs(ShareInstructionsText,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"How to invite others:\"}),/*#__PURE__*/_jsx(\"br\",{}),\"1. Copy the meeting link above\",/*#__PURE__*/_jsx(\"br\",{}),\"2. Share it via text, email, or any messaging app\",/*#__PURE__*/_jsx(\"br\",{}),\"3. Recipients can click the link to join the meeting\",/*#__PURE__*/_jsx(\"br\",{}),\"4. They'll be prompted to enter their name before joining\"]})})]})}),showNameModal&&/*#__PURE__*/_jsx(NameModal,{children:/*#__PURE__*/_jsxs(NameModalContent,{children:[/*#__PURE__*/_jsxs(NameModalHeader,{children:[/*#__PURE__*/_jsx(NameModalTitle,{children:\"Join CMA Meeting\"}),/*#__PURE__*/_jsx(NameModalSubtitle,{children:\"Please enter your name to join the meeting\"})]}),/*#__PURE__*/_jsx(NameInput,{type:\"text\",placeholder:\"Enter your name\",value:tempUserName,onChange:e=>setTempUserName(e.target.value),onKeyPress:handleNameKeyPress,autoFocus:true}),/*#__PURE__*/_jsx(NameModalButton,{onClick:handleNameSubmit,disabled:!tempUserName.trim(),children:\"Join Meeting\"})]})})]});};export default VideoRoom;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useParams","useSearchParams","useNavigate","io","styled","Mic","MicOff","Video","VideoOff","Monitor","MessageSquare","Phone","Users","Send","Share2","Copy","Check","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Container","div","_templateObject","_taggedTemplateLiteral","Header","_templateObject2","RoomInfo","_templateObject3","RoomId","span","_templateObject4","MainContent","_templateObject5","VideoGrid","_templateObject6","VideoContainer","_templateObject7","props","isActiveSpeaker","StyledVideo","video","_templateObject8","VideoLabel","_templateObject9","ChatPanel","_templateObject0","ChatHeader","_templateObject1","CloseButton","button","_templateObject10","ChatMessages","_templateObject11","Message","_templateObject12","isOwn","MessageSender","_templateObject13","ChatInput","_templateObject14","MessageInput","input","_templateObject15","SendButton","_templateObject16","Controls","_templateObject17","ControlButton","_templateObject18","active","ShareModal","_templateObject19","ShareModalContent","_templateObject20","ShareModalHeader","_templateObject21","ShareModalTitle","h3","_templateObject22","CloseModalButton","_templateObject23","ShareSection","_templateObject24","ShareLabel","label","_templateObject25","ShareInputContainer","_templateObject26","ShareInput","_templateObject27","CopyButton","_templateObject28","ShareInstructions","_templateObject29","ShareInstructionsText","p","_templateObject30","NameModal","_templateObject31","NameModalContent","_templateObject32","NameModalHeader","_templateObject33","NameModalTitle","h2","_templateObject34","NameModalSubtitle","_templateObject35","NameInput","_templateObject36","NameModalButton","_templateObject37","VideoRoom","roomId","searchParams","navigate","console","log","socket","setSocket","localStream","setLocalStream","remoteStreams","setRemoteStreams","Map","isAudioMuted","setIsAudioMuted","isVideoMuted","setIsVideoMuted","isScreenSharing","setIsScreenSharing","showChat","setShowChat","messages","setMessages","newMessage","setNewMessage","participants","setParticipants","isInitiator","setIsInitiator","showShareModal","setShowShareModal","linkCopied","setLinkCopied","showNameModal","setShowNameModal","tempUserName","setTempUserName","activeSpeaker","setActiveSpeaker","localVideoRef","remoteVideoRefs","peerConnections","audioAnalyzers","animationFrameRef","userName","get","nameParam","trim","createAudioAnalyzer","stream","userId","audioContext","window","AudioContext","webkitAudioContext","analyser","createAnalyser","microphone","createMediaStreamSource","dataArray","Uint8Array","frequencyBinCount","fftSize","smoothingTimeConstant","connect","current","set","error","analyzeAudioLevels","maxLevel","currentActiveSpeaker","forEach","_ref","getByteFrequencyData","average","reduce","sum","value","length","level","requestAnimationFrame","startAudioAnalysis","cancelAnimationFrame","stopAudioAnalysis","requestNotificationPermission","Notification","permission","requestPermission","showNotification","message","body","concat","sender","text","icon","tag","requireInteraction","socketUrl","process","env","NODE_ENV","location","origin","newSocket","transports","timeout","forceNew","upgrade","rememberUpgrade","on","id","engine","transport","name","reason","description","context","includes","opts","attemptNumber","close","createPeerConnection","peerConnection","RTCPeerConnection","iceServers","urls","getTracks","track","addTrack","kind","ontrack","event","_event$streams$","streams","remoteStream","prev","newMap","Array","from","keys","onicecandidate","candidate","emit","onconnectionstatechange","connectionState","handleOfferReceived","data","offer","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","handleAnswerReceived","handleIceCandidateReceived","addIceCandidate","RTCIceCandidate","sendOffer","createOffer","initLocalStream","navigator","mediaDevices","getUserMedia","audio","srcObject","alert","handleUserConnected","setTimeout","handleUserDisconnected","has","delete","newStreams","handleOffer","handleAnswer","handleIceCandidate","handleMessage","off","handleRoomJoined","totalParticipants","existingParticipants","getShareLink","baseUrl","copyToClipboard","clipboard","writeText","err","textArea","document","createElement","appendChild","select","execCommand","removeChild","openShareModal","closeShareModal","handleNameSubmit","newUrl","pathname","encodeURIComponent","history","replaceState","reload","handleNameKeyPress","e","key","toggleAudio","audioTrack","getAudioTracks","enabled","toggleVideo","videoTrack","getVideoTracks","toggleScreenShare","screenStream","getDisplayMedia","getSenders","find","s","replaceTrack","onended","sendMessage","timestamp","Date","toISOString","leaveRoom","stop","handleKeyPress","size","currentAnalyzers","_ref2","clear","pingServer","response","fetch","ok","json","warn","status","pingInterval","setInterval","clearInterval","children","style","color","padding","textAlign","ref","autoPlay","muted","playsInline","entries","map","_ref3","onClick","index","type","placeholder","onChange","target","onKeyPress","title","className","stopPropagation","readOnly","disabled","autoFocus"],"sources":["/Users/matty/untitled folder/CMAMeet/client/src/components/VideoRoom.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams, useSearchParams, useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport styled from 'styled-components';\nimport { \n  Mic, \n  MicOff, \n  Video, \n  VideoOff, \n  Monitor, \n  MessageSquare, \n  Phone, \n  Users,\n  Send,\n  Share2,\n  Copy,\n  Check\n} from 'lucide-react';\n\nconst Container = styled.div`\n  min-height: 100vh;\n  background: #1a1a1a;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Header = styled.div`\n  background: #2d2d2d;\n  padding: 15px 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: white;\n`;\n\nconst RoomInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst RoomId = styled.span`\n  font-weight: 600;\n  font-size: 1.1rem;\n`;\n\nconst MainContent = styled.div`\n  flex: 1;\n  display: flex;\n  position: relative;\n`;\n\nconst VideoGrid = styled.div`\n  flex: 1;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 10px;\n  padding: 20px;\n  align-content: start;\n`;\n\nconst VideoContainer = styled.div`\n  position: relative;\n  background: #333;\n  border-radius: 10px;\n  overflow: hidden;\n  aspect-ratio: 16/9;\n  min-height: 200px;\n  border: ${props => props.isActiveSpeaker ? '3px solid #667eea' : '3px solid transparent'};\n  transition: border-color 0.3s ease;\n  box-shadow: ${props => props.isActiveSpeaker ? '0 0 20px rgba(102, 126, 234, 0.5)' : 'none'};\n`;\n\nconst StyledVideo = styled.video`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst VideoLabel = styled.div`\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n  background: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 0.9rem;\n`;\n\nconst ChatPanel = styled.div`\n  width: 350px;\n  background: #2d2d2d;\n  display: flex;\n  flex-direction: column;\n  border-left: 1px solid #444;\n  \n  @media (max-width: 768px) {\n    position: fixed;\n    top: 0;\n    right: 0;\n    height: 100vh;\n    width: 100vw;\n    z-index: 1000;\n    border-left: none;\n  }\n`;\n\nconst ChatHeader = styled.div`\n  padding: 15px 20px;\n  border-bottom: 1px solid #444;\n  color: white;\n  font-weight: 600;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: white;\n  font-size: 1.5rem;\n  cursor: pointer;\n  padding: 5px;\n  display: none;\n  \n  @media (max-width: 768px) {\n    display: block;\n  }\n`;\n\nconst ChatMessages = styled.div`\n  flex: 1;\n  padding: 15px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nconst Message = styled.div`\n  background: ${props => props.isOwn ? '#667eea' : '#444'};\n  color: white;\n  padding: 10px 15px;\n  border-radius: 10px;\n  max-width: 80%;\n  align-self: ${props => props.isOwn ? 'flex-end' : 'flex-start'};\n  word-wrap: break-word;\n`;\n\nconst MessageSender = styled.div`\n  font-size: 0.8rem;\n  opacity: 0.7;\n  margin-bottom: 5px;\n`;\n\nconst ChatInput = styled.div`\n  padding: 15px;\n  border-top: 1px solid #444;\n  display: flex;\n  gap: 10px;\n`;\n\nconst MessageInput = styled.input`\n  flex: 1;\n  padding: 10px 15px;\n  border: 1px solid #555;\n  border-radius: 20px;\n  background: #333;\n  color: white;\n  font-size: 0.9rem;\n\n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n\n  &::placeholder {\n    color: #999;\n  }\n`;\n\nconst SendButton = styled.button`\n  background: #667eea;\n  border: none;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  cursor: pointer;\n  transition: background 0.3s ease;\n\n  &:hover {\n    background: #5a6fd8;\n  }\n`;\n\nconst Controls = styled.div`\n  background: #2d2d2d;\n  padding: 20px;\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  border-top: 1px solid #444;\n`;\n\nconst ControlButton = styled.button`\n  background: ${props => props.active ? '#667eea' : '#444'};\n  border: none;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: ${props => props.active ? '#5a6fd8' : '#555'};\n  }\n\n  &.leave {\n    background: #dc3545;\n    \n    &:hover {\n      background: #c82333;\n    }\n  }\n`;\n\nconst ShareModal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n`;\n\nconst ShareModalContent = styled.div`\n  background: #2d2d2d;\n  border-radius: 15px;\n  padding: 30px;\n  max-width: 500px;\n  width: 90%;\n  color: white;\n`;\n\nconst ShareModalHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst ShareModalTitle = styled.h3`\n  margin: 0;\n  font-size: 1.3rem;\n  color: white;\n`;\n\nconst CloseModalButton = styled.button`\n  background: none;\n  border: none;\n  color: white;\n  font-size: 1.5rem;\n  cursor: pointer;\n  padding: 5px;\n  \n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nconst ShareSection = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst ShareLabel = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  font-weight: 600;\n  color: #ccc;\n`;\n\nconst ShareInputContainer = styled.div`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n`;\n\nconst ShareInput = styled.input`\n  flex: 1;\n  padding: 12px 15px;\n  border: 1px solid #555;\n  border-radius: 8px;\n  background: #333;\n  color: white;\n  font-size: 0.9rem;\n  \n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n`;\n\nconst CopyButton = styled.button`\n  background: #667eea;\n  border: none;\n  color: white;\n  padding: 12px 15px;\n  border-radius: 8px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: 600;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: #5a6fd8;\n  }\n  \n  &:disabled {\n    background: #28a745;\n    cursor: not-allowed;\n  }\n`;\n\nconst ShareInstructions = styled.div`\n  background: rgba(102, 126, 234, 0.1);\n  border: 1px solid rgba(102, 126, 234, 0.3);\n  border-radius: 8px;\n  padding: 15px;\n  margin-top: 15px;\n`;\n\nconst ShareInstructionsText = styled.p`\n  margin: 0;\n  font-size: 0.9rem;\n  color: #ccc;\n  line-height: 1.4;\n`;\n\n// Name Entry Modal Components\nconst NameModal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst NameModalContent = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 32px;\n  max-width: 400px;\n  width: 90%;\n  text-align: center;\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);\n`;\n\nconst NameModalHeader = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst NameModalTitle = styled.h2`\n  margin: 0 0 8px 0;\n  color: #333;\n  font-size: 24px;\n  font-weight: 600;\n`;\n\nconst NameModalSubtitle = styled.p`\n  margin: 0;\n  color: #666;\n  font-size: 16px;\n`;\n\nconst NameInput = styled.input`\n  width: 100%;\n  padding: 12px 16px;\n  border: 2px solid #e1e5e9;\n  border-radius: 8px;\n  font-size: 16px;\n  margin-bottom: 20px;\n  box-sizing: border-box;\n  transition: border-color 0.2s;\n\n  &:focus {\n    outline: none;\n    border-color: #007bff;\n  }\n`;\n\nconst NameModalButton = styled.button`\n  background: #007bff;\n  color: white;\n  border: none;\n  padding: 12px 24px;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  width: 100%;\n\n  &:hover {\n    background: #0056b3;\n  }\n\n  &:disabled {\n    background: #ccc;\n    cursor: not-allowed;\n  }\n`;\n\nconst VideoRoom = () => {\n  const { roomId } = useParams();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  \n  console.log('VideoRoom component rendering, roomId:', roomId);\n  \n  const [socket, setSocket] = useState(null);\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStreams, setRemoteStreams] = useState(new Map());\n  const [isAudioMuted, setIsAudioMuted] = useState(false);\n  const [isVideoMuted, setIsVideoMuted] = useState(false);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const [showChat, setShowChat] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [participants, setParticipants] = useState(1);\n  const [isInitiator, setIsInitiator] = useState(false);\n  const [showShareModal, setShowShareModal] = useState(false);\n  const [linkCopied, setLinkCopied] = useState(false);\n  const [showNameModal, setShowNameModal] = useState(false);\n  const [tempUserName, setTempUserName] = useState('');\n  const [activeSpeaker, setActiveSpeaker] = useState(null);\n\n  const localVideoRef = useRef(null);\n  const remoteVideoRefs = useRef(new Map());\n  const peerConnections = useRef(new Map());\n  const audioAnalyzers = useRef(new Map());\n  const animationFrameRef = useRef(null);\n  const userName = searchParams.get('name') || 'Anonymous';\n  \n  // Check if we need to show the name entry modal\n  useEffect(() => {\n    const nameParam = searchParams.get('name');\n    if (!nameParam || nameParam.trim() === '') {\n      setShowNameModal(true);\n    }\n  }, [searchParams]);\n\n  // Audio level analysis for active speaker detection\n  const createAudioAnalyzer = useCallback((stream, userId) => {\n    try {\n      if (!stream) return null;\n      \n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      const analyser = audioContext.createAnalyser();\n      const microphone = audioContext.createMediaStreamSource(stream);\n      const dataArray = new Uint8Array(analyser.frequencyBinCount);\n      \n      analyser.fftSize = 256;\n      analyser.smoothingTimeConstant = 0.8;\n      microphone.connect(analyser);\n      \n      audioAnalyzers.current.set(userId, { analyser, dataArray, audioContext });\n      return { analyser, dataArray, audioContext };\n    } catch (error) {\n      console.error('Error creating audio analyzer:', error);\n      return null;\n    }\n  }, []);\n\n  const analyzeAudioLevels = useCallback(() => {\n    try {\n      let maxLevel = 0;\n      let currentActiveSpeaker = null;\n      \n      audioAnalyzers.current.forEach(({ analyser, dataArray }, userId) => {\n        if (analyser && dataArray) {\n          analyser.getByteFrequencyData(dataArray);\n          const average = dataArray.reduce((sum, value) => sum + value, 0) / dataArray.length;\n          const level = average / 255; // Normalize to 0-1\n          \n          if (level > maxLevel && level > 0.1) { // Threshold to avoid noise\n            maxLevel = level;\n            currentActiveSpeaker = userId;\n          }\n        }\n      });\n      \n      setActiveSpeaker(currentActiveSpeaker);\n      \n      animationFrameRef.current = requestAnimationFrame(analyzeAudioLevels);\n    } catch (error) {\n      console.error('Error in audio analysis:', error);\n    }\n  }, []);\n\n  const startAudioAnalysis = useCallback(() => {\n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n    }\n    analyzeAudioLevels();\n  }, [analyzeAudioLevels]);\n\n  const stopAudioAnalysis = useCallback(() => {\n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n      animationFrameRef.current = null;\n    }\n  }, []);\n\n  // Browser notification functionality\n  const requestNotificationPermission = useCallback(async () => {\n    try {\n      if ('Notification' in window && Notification.permission === 'default') {\n        await Notification.requestPermission();\n      }\n    } catch (error) {\n      console.error('Error requesting notification permission:', error);\n    }\n  }, []);\n\n  const showNotification = useCallback((message) => {\n    try {\n      if ('Notification' in window && Notification.permission === 'granted') {\n        new Notification('New CMA Meeting Message', {\n          body: `${message.sender}: ${message.text}`,\n          icon: '/favicon.ico',\n          tag: 'cma-chat',\n          requireInteraction: false\n        });\n      }\n    } catch (error) {\n      console.error('Error showing notification:', error);\n    }\n  }, []);\n\n  // Initialize socket connection\n  useEffect(() => {\n    const socketUrl = process.env.NODE_ENV === 'production' \n      ? window.location.origin \n      : 'http://localhost:5001';\n    console.log('Connecting to socket:', socketUrl);\n    \n    const newSocket = io(socketUrl, {\n      transports: ['polling', 'websocket'],\n      timeout: 20000,\n      forceNew: true,\n      upgrade: false,\n      rememberUpgrade: false\n    });\n    \n    newSocket.on('connect', () => {\n      console.log('Socket connected with ID:', newSocket.id);\n      console.log('Socket transport:', newSocket.io.engine.transport.name);\n    });\n    \n    newSocket.on('disconnect', (reason) => {\n      console.log('Socket disconnected, reason:', reason);\n    });\n    \n    newSocket.on('connect_error', (error) => {\n      console.error('Socket connection error:', error);\n      console.error('Error details:', error.message, error.description, error.context);\n      \n      // If WebSocket fails, try polling only\n      if (error.message && error.message.includes('websocket')) {\n        console.log('WebSocket failed, attempting polling-only connection...');\n        newSocket.io.opts.transports = ['polling'];\n        newSocket.io.opts.upgrade = false;\n        newSocket.connect();\n      }\n    });\n    \n    newSocket.on('reconnect', (attemptNumber) => {\n      console.log('Socket reconnected after', attemptNumber, 'attempts');\n    });\n    \n    newSocket.on('reconnect_error', (error) => {\n      console.error('Socket reconnection error:', error);\n    });\n    \n    setSocket(newSocket);\n\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  // Create peer connection\n  const createPeerConnection = useCallback((userId) => {\n    console.log('Creating peer connection for user:', userId);\n    const peerConnection = new RTCPeerConnection({\n      iceServers: [\n        { urls: 'stun:stun.l.google.com:19302' },\n        { urls: 'stun:stun1.l.google.com:19302' }\n      ]\n    });\n\n    // Add local stream tracks\n    if (localStream) {\n      localStream.getTracks().forEach(track => {\n        peerConnection.addTrack(track, localStream);\n        console.log('Added track to peer connection:', track.kind);\n      });\n    } else {\n      console.log('No local stream available when creating peer connection');\n    }\n\n    // Handle remote stream\n    peerConnection.ontrack = (event) => {\n      console.log('Received remote stream from:', userId);\n      console.log('Remote stream tracks:', event.streams[0]?.getTracks());\n      const [remoteStream] = event.streams;\n      setRemoteStreams(prev => {\n        const newMap = new Map(prev).set(userId, remoteStream);\n        console.log('Updated remote streams map:', Array.from(newMap.keys()));\n        return newMap;\n      });\n      // Create audio analyzer for remote stream (with error handling)\n      try {\n        createAudioAnalyzer(remoteStream, userId);\n      } catch (error) {\n        console.error('Error creating audio analyzer in peer connection:', error);\n      }\n    };\n\n    // Handle ICE candidates\n    peerConnection.onicecandidate = (event) => {\n      if (event.candidate) {\n        console.log('Sending ICE candidate to:', userId);\n        socket.emit('ice-candidate', {\n          candidate: event.candidate,\n          roomId,\n          userId\n        });\n      }\n    };\n\n    // Handle connection state changes\n    peerConnection.onconnectionstatechange = () => {\n      console.log(`Connection state with ${userId}:`, peerConnection.connectionState);\n    };\n\n    peerConnections.current.set(userId, peerConnection);\n  }, [localStream, socket, roomId, createAudioAnalyzer]);\n\n  // Handle offer received\n  const handleOfferReceived = useCallback(async (data) => {\n    const { offer, userId } = data;\n    console.log('Processing offer from:', userId);\n    let peerConnection = peerConnections.current.get(userId);\n    \n    if (!peerConnection) {\n      console.log('Creating new peer connection for offer from:', userId);\n      createPeerConnection(userId);\n      peerConnection = peerConnections.current.get(userId);\n    }\n\n    try {\n      await peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\n      console.log('Set remote description for:', userId);\n      const answer = await peerConnection.createAnswer();\n      await peerConnection.setLocalDescription(answer);\n      console.log('Created and set local answer for:', userId);\n      \n      socket.emit('answer', {\n        answer,\n        roomId,\n        userId\n      });\n      console.log('Sent answer to:', userId);\n    } catch (error) {\n      console.error('Error handling offer:', error);\n    }\n  }, [createPeerConnection, socket, roomId, createAudioAnalyzer]);\n\n  // Handle answer received\n  const handleAnswerReceived = useCallback(async (data) => {\n    const { answer, userId } = data;\n    console.log('Processing answer from:', userId);\n    const peerConnection = peerConnections.current.get(userId);\n    \n    if (peerConnection) {\n      try {\n        await peerConnection.setRemoteDescription(new RTCSessionDescription(answer));\n        console.log('Set remote answer for:', userId);\n      } catch (error) {\n        console.error('Error handling answer:', error);\n      }\n    } else {\n      console.error('No peer connection found for answer from:', userId);\n    }\n  }, []);\n\n  // Handle ICE candidate received\n  const handleIceCandidateReceived = useCallback(async (data) => {\n    const { candidate, userId } = data;\n    const peerConnection = peerConnections.current.get(userId);\n    \n    if (peerConnection) {\n      try {\n        await peerConnection.addIceCandidate(new RTCIceCandidate(candidate));\n      } catch (error) {\n        console.error('Error handling ICE candidate:', error);\n      }\n    }\n  }, []);\n\n  // Send offer to new user\n  const sendOffer = useCallback(async (userId) => {\n    const peerConnection = peerConnections.current.get(userId);\n    if (!peerConnection) {\n      console.log('No peer connection found for user:', userId);\n      return;\n    }\n\n    try {\n      const offer = await peerConnection.createOffer();\n      await peerConnection.setLocalDescription(offer);\n      \n      socket.emit('offer', {\n        offer,\n        roomId,\n        userId\n      });\n      console.log('Offer sent to user:', userId);\n    } catch (error) {\n      console.error('Error sending offer:', error);\n    }\n  }, [socket, roomId]);\n\n  // Initialize local media stream\n  useEffect(() => {\n    const initLocalStream = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: true\n        });\n        setLocalStream(stream);\n        if (localVideoRef.current) {\n          localVideoRef.current.srcObject = stream;\n        }\n        // Create audio analyzer for local stream (with error handling)\n        try {\n          createAudioAnalyzer(stream, userName);\n        } catch (error) {\n          console.error('Error creating audio analyzer for local stream:', error);\n        }\n      } catch (error) {\n        console.error('Error accessing media devices:', error);\n        alert('Unable to access camera and microphone. Please check permissions.');\n      }\n    };\n\n    initLocalStream();\n  }, [createAudioAnalyzer, userName]);\n\n  // Socket event handlers\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleUserConnected = (userId) => {\n      console.log('User connected:', userId);\n      // Only increment if it's not ourselves\n      if (userId !== userName) {\n        setParticipants(prev => prev + 1);\n        createPeerConnection(userId);\n        \n        // Only send offer if we are the initiator (first user or designated initiator)\n        if (isInitiator) {\n          console.log('Sending offer as initiator to:', userId);\n          setTimeout(() => {\n            sendOffer(userId);\n          }, 1000); // Small delay to ensure peer connection is ready\n        } else {\n          console.log('Waiting for offer from initiator:', userId);\n        }\n      } else {\n        console.log('Ignoring self-connection event for:', userId);\n      }\n    };\n\n    const handleUserDisconnected = (userId) => {\n      console.log('User disconnected:', userId);\n      setParticipants(prev => prev - 1);\n      if (peerConnections.current.has(userId)) {\n        peerConnections.current.get(userId).close();\n        peerConnections.current.delete(userId);\n      }\n      setRemoteStreams(prev => {\n        const newStreams = new Map(prev);\n        newStreams.delete(userId);\n        return newStreams;\n      });\n      // Clean up audio analyzer\n      if (audioAnalyzers.current.has(userId)) {\n        const { audioContext } = audioAnalyzers.current.get(userId);\n        audioContext.close();\n        audioAnalyzers.current.delete(userId);\n      }\n    };\n\n    const handleOffer = async (data) => {\n      console.log('Received offer from:', data.userId);\n      await handleOfferReceived(data);\n    };\n\n    const handleAnswer = async (data) => {\n      console.log('Received answer from:', data.userId);\n      await handleAnswerReceived(data);\n    };\n\n    const handleIceCandidate = async (data) => {\n      console.log('Received ICE candidate from:', data.userId);\n      await handleIceCandidateReceived(data);\n    };\n\n    const handleMessage = (data) => {\n      setMessages(prev => [...prev, data]);\n      // Show notification if chat is not visible or message is from someone else\n      if (!showChat || data.sender !== userName) {\n        showNotification(data);\n      }\n    };\n\n    socket.on('user-connected', handleUserConnected);\n    socket.on('user-disconnected', handleUserDisconnected);\n    socket.on('offer', handleOffer);\n    socket.on('answer', handleAnswer);\n    socket.on('ice-candidate', handleIceCandidate);\n    socket.on('receive-message', handleMessage);\n\n    return () => {\n      socket.off('user-connected', handleUserConnected);\n      socket.off('user-disconnected', handleUserDisconnected);\n      socket.off('offer', handleOffer);\n      socket.off('answer', handleAnswer);\n      socket.off('ice-candidate', handleIceCandidate);\n      socket.off('receive-message', handleMessage);\n    };\n  }, [socket, sendOffer, createPeerConnection, handleOfferReceived, handleAnswerReceived, handleIceCandidateReceived, isInitiator, userName, showChat, showNotification]);\n\n  // Join room when socket is ready\n  useEffect(() => {\n    if (socket && roomId) {\n      console.log('Joining room:', roomId, 'with user:', userName);\n      socket.emit('join-room', roomId, userName);\n    }\n  }, [socket, roomId, userName]);\n\n  // Listen for room-joined event to determine if we're the initiator\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleRoomJoined = (data) => {\n      console.log('Room joined response:', data);\n      if (data.isInitiator) {\n        setIsInitiator(true);\n        console.log('I am the initiator for this room');\n      } else {\n        setIsInitiator(false);\n        console.log('I am not the initiator, waiting for offers');\n      }\n      \n      // Set the correct participant count\n      if (data.totalParticipants) {\n        setParticipants(data.totalParticipants);\n        console.log(`Total participants in room: ${data.totalParticipants}`);\n      }\n      \n      // Create peer connections for existing participants\n      if (data.existingParticipants && data.existingParticipants.length > 0) {\n        console.log('Creating peer connections for existing participants:', data.existingParticipants);\n        data.existingParticipants.forEach(userId => {\n          if (userId !== userName) { // Don't create connection to self\n            createPeerConnection(userId);\n            // If we're the initiator, send offers to existing participants\n            if (data.isInitiator) {\n              setTimeout(() => {\n                sendOffer(userId);\n              }, 1000);\n            }\n          }\n        });\n      }\n    };\n\n    socket.on('room-joined', handleRoomJoined);\n\n    return () => {\n      socket.off('room-joined', handleRoomJoined);\n    };\n  }, [socket, createPeerConnection, sendOffer, userName]);\n\n\n  // Share room functionality\n  const getShareLink = () => {\n    const baseUrl = window.location.origin;\n    return `${baseUrl}/room/${roomId}?name=`;\n  };\n\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(getShareLink());\n      setLinkCopied(true);\n      setTimeout(() => setLinkCopied(false), 2000);\n    } catch (err) {\n      console.error('Failed to copy: ', err);\n      // Fallback for older browsers\n      const textArea = document.createElement('textarea');\n      textArea.value = getShareLink();\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand('copy');\n      document.body.removeChild(textArea);\n      setLinkCopied(true);\n      setTimeout(() => setLinkCopied(false), 2000);\n    }\n  };\n\n  const openShareModal = () => {\n    setShowShareModal(true);\n    setLinkCopied(false);\n  };\n\n  const closeShareModal = () => {\n    setShowShareModal(false);\n    setLinkCopied(false);\n  };\n\n  // Name modal functions\n  const handleNameSubmit = () => {\n    if (tempUserName.trim()) {\n      // Update the URL with the entered name\n      const newUrl = `${window.location.pathname}?name=${encodeURIComponent(tempUserName.trim())}`;\n      window.history.replaceState({}, '', newUrl);\n      setShowNameModal(false);\n      // Reload the page to pick up the new name parameter\n      window.location.reload();\n    }\n  };\n\n  const handleNameKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleNameSubmit();\n    }\n  };\n\n  // Toggle audio\n  const toggleAudio = () => {\n    if (localStream) {\n      const audioTrack = localStream.getAudioTracks()[0];\n      if (audioTrack) {\n        audioTrack.enabled = !audioTrack.enabled;\n        setIsAudioMuted(!audioTrack.enabled);\n      }\n    }\n  };\n\n  // Toggle video\n  const toggleVideo = () => {\n    if (localStream) {\n      const videoTrack = localStream.getVideoTracks()[0];\n      if (videoTrack) {\n        videoTrack.enabled = !videoTrack.enabled;\n        setIsVideoMuted(!videoTrack.enabled);\n      }\n    }\n  };\n\n  // Toggle screen sharing\n  const toggleScreenShare = async () => {\n    try {\n      if (!isScreenSharing) {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true,\n          audio: true\n        });\n        \n        // Replace video track in all peer connections\n        const videoTrack = screenStream.getVideoTracks()[0];\n        peerConnections.current.forEach(peerConnection => {\n          const sender = peerConnection.getSenders().find(s => \n            s.track && s.track.kind === 'video'\n          );\n          if (sender) {\n            sender.replaceTrack(videoTrack);\n          }\n        });\n\n        // Update local video\n        if (localVideoRef.current) {\n          localVideoRef.current.srcObject = screenStream;\n        }\n\n        setIsScreenSharing(true);\n\n        // Handle screen share end\n        videoTrack.onended = () => {\n          toggleScreenShare();\n        };\n      } else {\n        // Stop screen sharing and restore camera\n        if (localStream) {\n          const videoTrack = localStream.getVideoTracks()[0];\n          peerConnections.current.forEach(peerConnection => {\n            const sender = peerConnection.getSenders().find(s => \n              s.track && s.track.kind === 'video'\n            );\n            if (sender) {\n              sender.replaceTrack(videoTrack);\n            }\n          });\n\n          if (localVideoRef.current) {\n            localVideoRef.current.srcObject = localStream;\n          }\n        }\n        setIsScreenSharing(false);\n      }\n    } catch (error) {\n      console.error('Error toggling screen share:', error);\n    }\n  };\n\n  // Send message\n  const sendMessage = () => {\n    if (newMessage.trim() && socket) {\n      const message = {\n        text: newMessage.trim(),\n        sender: userName,\n        timestamp: new Date().toISOString()\n      };\n      \n      socket.emit('send-message', { message, roomId });\n      setNewMessage('');\n    }\n  };\n\n  // Leave room\n  const leaveRoom = () => {\n    if (socket) {\n      socket.emit('leave-room', roomId, userName);\n    }\n    \n    // Close all peer connections\n    peerConnections.current.forEach(peerConnection => {\n      peerConnection.close();\n    });\n    \n    // Stop local stream\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n    }\n    \n    navigate('/');\n  };\n\n  // Handle key press for message input\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n\n  // Start audio analysis when we have streams\n  useEffect(() => {\n    if (localStream || remoteStreams.size > 0) {\n      startAudioAnalysis();\n    } else {\n      stopAudioAnalysis();\n    }\n    \n    return () => {\n      stopAudioAnalysis();\n      // Clean up all audio analyzers\n      const currentAnalyzers = audioAnalyzers.current;\n      currentAnalyzers.forEach(({ audioContext }) => {\n        audioContext.close();\n      });\n      currentAnalyzers.clear();\n    };\n  }, [localStream, remoteStreams, startAudioAnalysis, stopAudioAnalysis]);\n\n  // Request notification permission on component mount\n  useEffect(() => {\n    requestNotificationPermission();\n  }, [requestNotificationPermission]);\n\n  // Ping server every 5 minutes to keep Render service alive\n  useEffect(() => {\n    const pingServer = async () => {\n      try {\n        const response = await fetch('/api/ping');\n        if (response.ok) {\n          const data = await response.json();\n          console.log('Server ping successful:', data.message);\n        } else {\n          console.warn('Server ping failed:', response.status);\n        }\n      } catch (error) {\n        console.error('Server ping error:', error);\n      }\n    };\n\n    // Ping immediately on mount\n    pingServer();\n\n    // Set up interval to ping every 5 minutes (300,000 ms)\n    const pingInterval = setInterval(pingServer, 5 * 60 * 1000);\n\n    return () => {\n      clearInterval(pingInterval);\n    };\n  }, []);\n\n  // Add error boundary fallback\n  if (!roomId) {\n    return (\n      <Container>\n        <Header>\n          <RoomInfo>\n            <Users size={20} />\n            <RoomId>CMA Meeting: Loading...</RoomId>\n          </RoomInfo>\n        </Header>\n        <MainContent>\n          <div style={{ color: 'white', padding: '20px', textAlign: 'center' }}>\n            Loading meeting room...\n          </div>\n        </MainContent>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <Header>\n        <RoomInfo>\n          <Users size={20} />\n          <RoomId>CMA Meeting: {roomId}</RoomId>\n          <span>({participants} members)</span>\n        </RoomInfo>\n      </Header>\n\n      <MainContent>\n        <VideoGrid>\n          {/* Local video */}\n          <VideoContainer isActiveSpeaker={activeSpeaker === userName}>\n            <StyledVideo\n              ref={localVideoRef}\n              autoPlay\n              muted\n              playsInline\n            />\n            <VideoLabel>{userName} (You)</VideoLabel>\n          </VideoContainer>\n\n          {/* Remote videos */}\n          {Array.from(remoteStreams.entries()).map(([userId, stream]) => {\n            console.log('Rendering remote video for user:', userId, 'stream:', stream);\n            return (\n              <VideoContainer key={userId} isActiveSpeaker={activeSpeaker === userId}>\n                <StyledVideo\n                  ref={ref => {\n                    if (ref) {\n                      ref.srcObject = stream;\n                      remoteVideoRefs.current.set(userId, ref);\n                      console.log('Set remote video srcObject for user:', userId);\n                    }\n                  }}\n                  autoPlay\n                  playsInline\n              />\n              <VideoLabel>{userId}</VideoLabel>\n            </VideoContainer>\n            );\n          })}\n        </VideoGrid>\n\n        {showChat && (\n          <ChatPanel>\n            <ChatHeader>\n              <span>CMA Fellowship Chat</span>\n              <CloseButton onClick={() => setShowChat(false)}>×</CloseButton>\n            </ChatHeader>\n            <ChatMessages>\n              {messages.map((message, index) => (\n                <Message key={index} isOwn={message.sender === userName}>\n                  <MessageSender>{message.sender}</MessageSender>\n                  {message.text}\n                </Message>\n              ))}\n            </ChatMessages>\n            <ChatInput>\n              <MessageInput\n                type=\"text\"\n                placeholder=\"Share your experience, strength, and hope...\"\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n                onKeyPress={handleKeyPress}\n              />\n              <SendButton onClick={sendMessage}>\n                <Send size={16} />\n              </SendButton>\n            </ChatInput>\n          </ChatPanel>\n        )}\n      </MainContent>\n\n      <Controls>\n        <ControlButton\n          onClick={toggleAudio}\n          active={!isAudioMuted}\n          title={isAudioMuted ? 'Unmute' : 'Mute'}\n        >\n          {isAudioMuted ? <MicOff size={20} /> : <Mic size={20} />}\n        </ControlButton>\n\n        <ControlButton\n          onClick={toggleVideo}\n          active={!isVideoMuted}\n          title={isVideoMuted ? 'Turn on camera' : 'Turn off camera'}\n        >\n          {isVideoMuted ? <VideoOff size={20} /> : <Video size={20} />}\n        </ControlButton>\n\n        <ControlButton\n          onClick={toggleScreenShare}\n          active={isScreenSharing}\n          title={isScreenSharing ? 'Stop sharing' : 'Share screen'}\n        >\n          <Monitor size={20} />\n        </ControlButton>\n\n        <ControlButton\n          onClick={() => setShowChat(!showChat)}\n          active={showChat}\n          title=\"Toggle chat\"\n        >\n          <MessageSquare size={20} />\n        </ControlButton>\n\n        <ControlButton\n          onClick={openShareModal}\n          title=\"Share room link\"\n        >\n          <Share2 size={20} />\n        </ControlButton>\n\n        <ControlButton\n          onClick={leaveRoom}\n          className=\"leave\"\n          title=\"Leave room\"\n        >\n          <Phone size={20} />\n        </ControlButton>\n      </Controls>\n\n      {showShareModal && (\n        <ShareModal onClick={closeShareModal}>\n          <ShareModalContent onClick={(e) => e.stopPropagation()}>\n            <ShareModalHeader>\n              <ShareModalTitle>Share Meeting</ShareModalTitle>\n              <CloseModalButton onClick={closeShareModal}>×</CloseModalButton>\n            </ShareModalHeader>\n            \n            <ShareSection>\n              <ShareLabel>Meeting Link</ShareLabel>\n              <ShareInputContainer>\n                <ShareInput\n                  type=\"text\"\n                  value={getShareLink()}\n                  readOnly\n                />\n                <CopyButton\n                  onClick={copyToClipboard}\n                  disabled={linkCopied}\n                >\n                  {linkCopied ? (\n                    <>\n                      <Check size={16} />\n                      Copied!\n                    </>\n                  ) : (\n                    <>\n                      <Copy size={16} />\n                      Copy\n                    </>\n                  )}\n                </CopyButton>\n              </ShareInputContainer>\n            </ShareSection>\n\n            <ShareInstructions>\n              <ShareInstructionsText>\n                <strong>How to invite others:</strong><br />\n                1. Copy the meeting link above<br />\n                2. Share it via text, email, or any messaging app<br />\n                3. Recipients can click the link to join the meeting<br />\n                4. They'll be prompted to enter their name before joining\n              </ShareInstructionsText>\n            </ShareInstructions>\n          </ShareModalContent>\n        </ShareModal>\n      )}\n\n      {/* Name Entry Modal */}\n      {showNameModal && (\n        <NameModal>\n          <NameModalContent>\n            <NameModalHeader>\n              <NameModalTitle>Join CMA Meeting</NameModalTitle>\n              <NameModalSubtitle>\n                Please enter your name to join the meeting\n              </NameModalSubtitle>\n            </NameModalHeader>\n            \n            <NameInput\n              type=\"text\"\n              placeholder=\"Enter your name\"\n              value={tempUserName}\n              onChange={(e) => setTempUserName(e.target.value)}\n              onKeyPress={handleNameKeyPress}\n              autoFocus\n            />\n            \n            <NameModalButton\n              onClick={handleNameSubmit}\n              disabled={!tempUserName.trim()}\n            >\n              Join Meeting\n            </NameModalButton>\n          </NameModalContent>\n        </NameModal>\n      )}\n    </Container>\n  );\n};\n\nexport default VideoRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}